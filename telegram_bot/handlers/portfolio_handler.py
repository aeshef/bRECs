import logging
import matplotlib.pyplot as plt
import io
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackContext, CallbackQueryHandler

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger(__name__)

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É –≤ PYTHONPATH
import sys
sys.path.append('/opt/portfolio-advisor')

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏ –ø—Ä–æ–µ–∫—Ç–∞
from database.models import SessionLocal
from database import crud

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è ConversationHandler
PORTFOLIO_VIEW = 3
PORTFOLIO_REBALANCE = 4
START_ROUTES = 0

def show_portfolio(update: Update, context: CallbackContext):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –ø–æ—Ä—Ç—Ñ–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    query = update.callback_query
    query.answer()
    
    user = update.effective_user
    db = SessionLocal()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        db_user = crud.get_user_by_telegram_id(db, user.id)
        
        if not db_user:
            query.edit_message_text(
                "–û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start."
            )
            return START_ROUTES
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø–æ—Ä—Ç—Ñ–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        portfolio = crud.get_latest_portfolio(db, db_user.id)
        
        if not portfolio or not portfolio.weights:
            # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ø–æ—Ä—Ç—Ñ–µ–ª—è
            keyboard = [
                [InlineKeyboardButton("–°–æ–∑–¥–∞—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—å", callback_data="create_portfolio")],
                [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="back_to_main")]
            ]
            
            reply_markup = InlineKeyboardMarkup(keyboard)
            
            query.edit_message_text(
                "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ—Ä—Ç—Ñ–µ–ª—è. "
                "–•–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–µ–≥–æ —Ä–∏—Å–∫-–ø—Ä–æ—Ñ–∏–ª—è?",
                reply_markup=reply_markup
            )
            
            return PORTFOLIO_VIEW
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–æ—Å—Ç–∞–≤–æ–º –ø–æ—Ä—Ç—Ñ–µ–ª—è
        message = f"üìä *–í–∞—à —Ç–µ–∫—É—â–∏–π –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å*\n\n"
        
        # –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞
        labels = []
        sizes = []
        risk_free_total = 0
        stocks_total = 0
        
        for ticker, weight in portfolio.weights.items():
            weight_percent = weight * 100
            
            if ticker.startswith("OFZ") or ticker in ["CASH", "BOND", "RUOB"]:
                risk_free_total += weight
            else:
                stocks_total += weight
                
            if weight >= 0.02:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∑–Ω–∞—á–∏–º—ã–µ –¥–æ–ª–∏ (>= 2%)
                message += f"‚Ä¢ {ticker}: {weight_percent:.1f}%\n"
                labels.append(ticker)
                sizes.append(weight)
        
        message += f"\n*–û–±—â–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞:*\n"
        message += f"‚Ä¢ –ë–µ–∑—Ä–∏—Å–∫–æ–≤—ã–µ –∞–∫—Ç–∏–≤—ã: {risk_free_total*100:.1f}%\n"
        message += f"‚Ä¢ –ê–∫—Ü–∏–∏: {stocks_total*100:.1f}%\n\n"
        
        message += f"–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {portfolio.created_at.strftime('%d.%m.%Y')}\n"
        message += f"–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {portfolio.updated_at.strftime('%d.%m.%Y')}\n"
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏–∞–≥—Ä–∞–º–º—É —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–æ–≤
        plt.figure(figsize=(10, 6))
        plt.pie(sizes, labels=labels, autopct='%1.1f%%', startangle=90)
        plt.axis('equal')
        plt.title('–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–æ–≤ –≤ –ø–æ—Ä—Ç—Ñ–µ–ª–µ')
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∏–∞–≥—Ä–∞–º–º—É –≤ –±—É—Ñ–µ—Ä
        buf = io.BytesIO()
        plt.savefig(buf, format='png')
        buf.seek(0)
        plt.close()
        
        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
        keyboard = [
            [InlineKeyboardButton("üîÑ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ä–µ–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–µ", callback_data="rebalance")],
            [InlineKeyboardButton("üìà –ê–Ω–∞–ª–∏–∑ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏", callback_data="performance")],
            [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="back_to_main")]
        ]
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        # –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        query.edit_message_text(
            message,
            parse_mode='Markdown',
            reply_markup=reply_markup
        )
        
        # –ó–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∏–∞–≥—Ä–∞–º–º—É
        context.bot.send_photo(
            chat_id=update.effective_chat.id,
            photo=buf,
            caption="–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–æ–≤ –≤ –≤–∞—à–µ–º –ø–æ—Ä—Ç—Ñ–µ–ª–µ"
        )
        
        return PORTFOLIO_VIEW
    
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—è: {e}")
        query.edit_message_text(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–æ—Ä—Ç—Ñ–µ–ª—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )
        return START_ROUTES
    
    finally:
        db.close()

def show_rebalance(update: Update, context: CallbackContext):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ä–µ–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–µ –ø–æ—Ä—Ç—Ñ–µ–ª—è
    """
    query = update.callback_query
    query.answer()
    
    user = update.effective_user
    db = SessionLocal()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        db_user = crud.get_user_by_telegram_id(db, user.id)
        
        if not db_user:
            query.edit_message_text(
                "–û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start."
            )
            return START_ROUTES
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø–æ—Ä—Ç—Ñ–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        current_portfolio = crud.get_latest_portfolio(db, db_user.id)
        
        if not current_portfolio or not current_portfolio.weights:
            # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ø–æ—Ä—Ç—Ñ–µ–ª—è
            keyboard = [
                [InlineKeyboardButton("–°–æ–∑–¥–∞—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—å", callback_data="create_portfolio")],
                [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="back_to_main")]
            ]
            
            reply_markup = InlineKeyboardMarkup(keyboard)
            
            query.edit_message_text(
                "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ—Ä—Ç—Ñ–µ–ª—è. "
                "–•–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–µ–≥–æ —Ä–∏—Å–∫-–ø—Ä–æ—Ñ–∏–ª—è?",
                reply_markup=reply_markup
            )
            
            return PORTFOLIO_VIEW
        
        # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ —Ä–µ–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–µ
        # –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –≤—ã–∑–æ–≤ –≤–∞—à–µ–π —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
        # –°–µ–π—á–∞—Å –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É
        
        # –ü—Ä–∏–º–µ—Ä —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π:
        rebalance_recommendations = [
            {"ticker": "SBER", "current_weight": 0.15, "target_weight": 0.18, "action": "BUY", "change_pct": 0.03},
            {"ticker": "GAZP", "current_weight": 0.12, "target_weight": 0.10, "action": "SELL", "change_pct": 0.02},
            {"ticker": "OFZ-26235", "current_weight": 0.25, "target_weight": 0.22, "action": "SELL", "change_pct": 0.03}
        ]
        
        if not rebalance_recommendations:
            query.edit_message_text(
                "‚úÖ –í–∞—à –ø–æ—Ä—Ç—Ñ–µ–ª—å –Ω–µ —Ç—Ä–µ–±—É–µ—Ç —Ä–µ–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∏ –≤ –Ω–∞—Å—Ç–æ—è—â–∏–π –º–æ–º–µ–Ω—Ç.\n\n"
                "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å —Ä–µ–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∏ —á–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é "
                "–∏–ª–∏ –ø—Ä–∏ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –Ω–∞ —Ä—ã–Ω–∫–µ.",
                reply_markup=InlineKeyboardMarkup([
                    [InlineKeyboardButton("–ù–∞–∑–∞–¥ –∫ –ø–æ—Ä—Ç—Ñ–µ–ª—é", callback_data="portfolio")],
                    [InlineKeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")]
                ])
            )
            return PORTFOLIO_REBALANCE
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –ø–æ —Ä–µ–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–µ
        message = "üîÑ *–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ä–µ–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–µ –ø–æ—Ä—Ç—Ñ–µ–ª—è*\n\n"
        
        for rec in rebalance_recommendations:
            action = "üü¢ –ö—É–ø–∏—Ç—å" if rec['action'] == 'BUY' else "üî¥ –ü—Ä–æ–¥–∞—Ç—å"
            message += f"{action} {rec['ticker']}: {rec['current_weight']*100:.1f}% ‚Üí {rec['target_weight']*100:.1f}% "
            message += f"({abs(rec['change_pct']*100):.1f}%)\n"
        
        message += "\n*–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:* –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Å–Ω–æ–≤–∞–Ω—ã –Ω–∞ —Ç–µ–∫—É—â–µ–π —Ä—ã–Ω–æ—á–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ –∏ —Ü–µ–ª–µ–≤–æ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—è."
        
        keyboard = [
            [InlineKeyboardButton("üìä –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø–æ—Ä—Ç—Ñ–µ–ª—é", callback_data="portfolio")],
            [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="back_to_main")]
        ]
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        query.edit_message_text(
            message,
            parse_mode='Markdown',
            reply_markup=reply_markup
        )
        
        return PORTFOLIO_REBALANCE
    
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ —Ä–µ–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–µ: {e}")
        query.edit_message_text(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )
        return START_ROUTES
    
    finally:
        db.close()

def handle_portfolio_action(update: Update, context: CallbackContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è –≤ —Ä–∞–∑–¥–µ–ª–µ –ø–æ—Ä—Ç—Ñ–µ–ª—è
    """
    query = update.callback_query
    query.answer()
    
    if query.data == "create_portfolio":
        # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ—Ä—Ç—Ñ–µ–ª—è
        query.edit_message_text(
            "üîÑ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–ª—è –≤–∞—Å –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å...\n\n"
            "–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç. –ú—ã —É—á–∏—Ç—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Ä—ã–Ω–æ—á–Ω—É—é —Å–∏—Ç—É–∞—Ü–∏—é, "
            "—Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑."
        )
        
        # –ó–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—è
        # –≠—Ç–æ –∑–∞–≥–ª—É—à–∫–∞, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–º –≤—ã–∑–æ–≤–æ–º
        import time
        time.sleep(2)  # –ò–º–∏—Ç–∞—Ü–∏—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
        
        # –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Ä—Ç—Ñ–µ–ª—è –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ
        return show_portfolio(update, context)
    
    elif query.data == "performance":
        # –ü–æ–∫–∞–∑ –∞–Ω–∞–ª–∏–∑–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        query.edit_message_text(
            "üìà *–ê–Ω–∞–ª–∏–∑ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—è*\n\n"
            "–§—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –∏ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.\n\n"
            "–ó–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–≤–∏–¥–µ—Ç—å –¥–∏–Ω–∞–º–∏–∫—É —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—è, —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –±–µ–Ω—á–º–∞—Ä–∫–æ–º, "
            "–æ—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ —Ä–∏—Å–∫–∞ –∏ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏.",
            parse_mode='Markdown',
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("–ù–∞–∑–∞–¥ –∫ –ø–æ—Ä—Ç—Ñ–µ–ª—é", callback_data="portfolio")],
                [InlineKeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")]
            ])
        )
        return PORTFOLIO_VIEW
    
    elif query.data == "back_to_main":
        # –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        keyboard = [
            [InlineKeyboardButton("üìä –ú–æ–π –ø–æ—Ä—Ç—Ñ–µ–ª—å", callback_data="portfolio")],
            [InlineKeyboardButton("üîÑ –†–µ–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞", callback_data="rebalance")],
            [InlineKeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings")],
            [InlineKeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="help")]
        ]
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        query.edit_message_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é:",
            reply_markup=reply_markup
        )
        
        return START_ROUTES

def get_view_handlers():
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è PORTFOLIO_VIEW
    """
    return [
        CallbackQueryHandler(handle_portfolio_action)
    ]

def get_rebalance_handlers():
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è PORTFOLIO_REBALANCE
    """
    return [
        CallbackQueryHandler(handle_portfolio_action)
    ]
