import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackContext, CallbackQueryHandler, MessageHandler, Filters

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger(__name__)

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É –≤ PYTHONPATH
import sys
sys.path.append('/opt/portfolio-advisor')

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏ –ø—Ä–æ–µ–∫—Ç–∞
from database.models import SessionLocal
from database import crud

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è ConversationHandler
SETTINGS = 5
START_ROUTES = 0

def show_settings(update: Update, context: CallbackContext):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    query = update.callback_query
    query.answer()
    
    user = update.effective_user
    db = SessionLocal()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        db_user = crud.get_user_by_telegram_id(db, user.id)
        
        if not db_user:
            query.edit_message_text(
                "–û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start."
            )
            return START_ROUTES
        
        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        preferences = crud.get_user_preferences(db, db_user.id)
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ä–∏—Å–∫-–ø—Ä–æ—Ñ–∏–ª—å
        risk_profile = db_user.risk_profile or "–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω"
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
        message = "‚öôÔ∏è *–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è*\n\n"
        
        message += f"*–†–∏—Å–∫-–ø—Ä–æ—Ñ–∏–ª—å:* {get_profile_name_russian(risk_profile)}\n\n"
        
        if preferences:
            message += "*–ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ—Ä—Ç—Ñ–µ–ª—è:*\n"
            message += f"‚Ä¢ –ú–∞–∫—Å–∏–º—É–º –∞–∫—Ü–∏–π: {preferences.max_stocks}\n"
            message += f"‚Ä¢ –ú–∞–∫—Å–∏–º—É–º –æ–±–ª–∏–≥–∞—Ü–∏–π: {preferences.max_bonds}\n"
            
            if preferences.excluded_sectors and len(preferences.excluded_sectors) > 0:
                message += f"‚Ä¢ –ò—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ —Å–µ–∫—Ç–æ—Ä—ã: {', '.join(preferences.excluded_sectors)}\n"
            
            if preferences.preferred_sectors and len(preferences.preferred_sectors) > 0:
                message += f"‚Ä¢ –ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–µ —Å–µ–∫—Ç–æ—Ä—ã: {', '.join(preferences.preferred_sectors)}\n"
        
        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
        keyboard = [
            [InlineKeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å —Ä–∏—Å–∫-–ø—Ä–æ—Ñ–∏–ª—å", callback_data="change_risk_profile")],
            [InlineKeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è", callback_data="change_preferences")],
            [InlineKeyboardButton("–î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç", callback_data="deactivate_account")],
            [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="back_to_main")]
        ]
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        query.edit_message_text(
            message,
            parse_mode='Markdown',
            reply_markup=reply_markup
        )
        
        return SETTINGS
    
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
        query.edit_message_text(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )
        return START_ROUTES
    
    finally:
        db.close()

def get_profile_name_russian(profile):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
    """
    profiles = {
        "conservative": "–ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–π",
        "moderate": "–£–º–µ—Ä–µ–Ω–Ω—ã–π",
        "aggressive": "–ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π"
    }
    return profiles.get(profile, profile)

def handle_settings_action(update: Update, context: CallbackContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è –≤ —Ä–∞–∑–¥–µ–ª–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    """
    query = update.callback_query
    query.answer()
    
    if query.data == "change_risk_profile":
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –Ω–æ–≤–æ–≥–æ —Ä–∏—Å–∫-–ø—Ä–æ—Ñ–∏–ª—è
        keyboard = [
            [InlineKeyboardButton("–ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–π", callback_data="set_risk_conservative")],
            [InlineKeyboardButton("–£–º–µ—Ä–µ–Ω–Ω—ã–π", callback_data="set_risk_moderate")],
            [InlineKeyboardButton("–ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π", callback_data="set_risk_aggressive")],
            [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="settings")]
        ]
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        query.edit_message_text(
            "*–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π —Ä–∏—Å–∫-–ø—Ä–æ—Ñ–∏–ª—å:*\n\n"
            "üîµ *–ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–π* - –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∏—Å–∫, —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥\n"
            "üü° *–£–º–µ—Ä–µ–Ω–Ω—ã–π* - —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ —Ä–∏—Å–∫—É –∏ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏\n"
            "üî¥ *–ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π* - –≤—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫ —Ä–∞–¥–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏\n\n"
            "‚ö†Ô∏è –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∏—Å–∫-–ø—Ä–æ—Ñ–∏–ª—è –ø—Ä–∏–≤–µ–¥–µ—Ç –∫ –ø–µ—Ä–µ—Å—á–µ—Ç—É —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –¥–ª—è –≤–∞—à–µ–≥–æ –ø–æ—Ä—Ç—Ñ–µ–ª—è.",
            parse_mode='Markdown',
            reply_markup=reply_markup
        )
        
        return SETTINGS
    
    elif query.data.startswith("set_risk_"):
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π —Ä–∏—Å–∫-–ø—Ä–æ—Ñ–∏–ª—å
        risk_profile = query.data.replace("set_risk_", "")
        
        user = update.effective_user
        db = SessionLocal()
        
        try:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∏—Å–∫-–ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            crud.update_user_risk_profile(db, user.id, risk_profile)
            
            query.edit_message_text(
                f"‚úÖ –í–∞—à —Ä–∏—Å–∫-–ø—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ *{get_profile_name_russian(risk_profile)}*.\n\n"
                "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–æ—Ä—Ç—Ñ–µ–ª—é –±—É–¥—É—Ç –æ–±–Ω–æ–≤–ª–µ–Ω—ã –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º —Ä–∞—Å—á–µ—Ç–µ.",
                parse_mode='Markdown',
                reply_markup=InlineKeyboardMarkup([
                    [InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º", callback_data="settings")],
                    [InlineKeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")]
                ])
            )
        
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∏—Å–∫-–ø—Ä–æ—Ñ–∏–ª—è: {e}")
            query.edit_message_text(
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∏—Å–∫-–ø—Ä–æ—Ñ–∏–ª—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                reply_markup=InlineKeyboardMarkup([
                    [InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º", callback_data="settings")]
                ])
            )
        
        finally:
            db.close()
        
        return SETTINGS
    
    elif query.data == "change_preferences":
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π
        keyboard = [
            [InlineKeyboardButton("–ú–∞–∫—Å–∏–º—É–º –∞–∫—Ü–∏–π", callback_data="set_max_stocks")],
            [InlineKeyboardButton("–ú–∞–∫—Å–∏–º—É–º –æ–±–ª–∏–≥–∞—Ü–∏–π", callback_data="set_max_bonds")],
            [InlineKeyboardButton("–ò—Å–∫–ª—é—á–∏—Ç—å —Å–µ–∫—Ç–æ—Ä—ã", callback_data="exclude_sectors")],
            [InlineKeyboardButton("–ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–µ —Å–µ–∫—Ç–æ—Ä—ã", callback_data="prefer_sectors")],
            [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="settings")]
        ]
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        query.edit_message_text(
            "*–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –ø–æ—Ä—Ç—Ñ–µ–ª—è*\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:",
            parse_mode='Markdown',
            reply_markup=reply_markup
        )
        
        return SETTINGS
    
    elif query.data == "deactivate_account":
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞
        keyboard = [
            [InlineKeyboardButton("–î–∞, –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å", callback_data="confirm_deactivate")],
            [InlineKeyboardButton("–ù–µ—Ç, –æ—Ç–º–µ–Ω–∞", callback_data="settings")]
        ]
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        query.edit_message_text(
            "‚ö†Ô∏è *–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç?*\n\n"
            "–ü—Ä–∏ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏:\n"
            "‚Ä¢ –í—ã –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏\n"
            "‚Ä¢ –í–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –ø–æ—Ä—Ç—Ñ–µ–ª—å –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã\n"
            "‚Ä¢ –í—ã —Å–º–æ–∂–µ—Ç–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç –ø–æ–∑–∂–µ, –Ω–∞–ø–∏—Å–∞–≤ /start\n\n"
            "–•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å?",
            parse_mode='Markdown',
            reply_markup=reply_markup
        )
        
        return SETTINGS
    
    elif query.data == "confirm_deactivate":
        # –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –∞–∫–∫–∞—É–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = update.effective_user
        db = SessionLocal()
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            db_user = crud.get_user_by_telegram_id(db, user.id)
            
            if db_user:
                # –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                db_user.is_active = False
                db.commit()
                
                query.edit_message_text(
                    "‚úÖ –í–∞—à –∞–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.\n\n"
                    "–í—ã –±–æ–ª—å—à–µ –Ω–µ –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.\n"
                    "–ß—Ç–æ–±—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /start.",
                    reply_markup=InlineKeyboardMarkup([
                        [InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ", callback_data="back_to_main")]
                    ])
                )
            else:
                query.edit_message_text(
                    "–û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.",
                    reply_markup=InlineKeyboardMarkup([
                        [InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ", callback_data="back_to_main")]
                    ])
                )
        
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞: {e}")
            query.edit_message_text(
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                reply_markup=InlineKeyboardMarkup([
                    [InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º", callback_data="settings")]
                ])
            )
        
        finally:
            db.close()
        
        return START_ROUTES
    
    elif query.data == "back_to_main":
        # –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        keyboard = [
            [InlineKeyboardButton("üìä –ú–æ–π –ø–æ—Ä—Ç—Ñ–µ–ª—å", callback_data="portfolio")],
            [InlineKeyboardButton("üîÑ –†–µ–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞", callback_data="rebalance")],
            [InlineKeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings")],
            [InlineKeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="help")]
        ]
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        query.edit_message_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é:",
            reply_markup=reply_markup
        )
        
        return START_ROUTES
    
    elif query.data == "settings":
        # –í–æ–∑–≤—Ä–∞—Ç –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º
        return show_settings(update, context)
    
    return SETTINGS

def get_handlers():
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è SETTINGS
    """
    return [
        CallbackQueryHandler(handle_settings_action)
    ]
