Search.setIndex({"alltitles": {"Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "Module contents": [[2, "module-pys"], [3, "module-pys.data_collection"], [4, "module-pys.data_collection.news_processor"], [5, "module-pys.improved_pipeline"], [6, "module-pys.porfolio_optimization"], [7, "module-pys.utils"]], "Parameters:": [[5, "parameters"], [6, "parameters"], [6, "id1"], [6, "id2"], [6, "id3"], [6, "id5"], [6, "id6"]], "Returns:": [[5, "returns"], [5, "id1"], [6, "returns"], [6, "id4"]], "Submodules": [[3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"]], "Subpackages": [[2, "subpackages"], [3, "subpackages"]], "bRECs documentation": [[0, null]], "kursach": [[1, null]], "pys package": [[2, null]], "pys.data_collection package": [[3, null]], "pys.data_collection.bonds_kbd_pipeline module": [[3, "module-pys.data_collection.bonds_kbd_pipeline"]], "pys.data_collection.bonds_kbd_strategies module": [[3, "module-pys.data_collection.bonds_kbd_strategies"]], "pys.data_collection.bonds_parser module": [[3, "module-pys.data_collection.bonds_parser"]], "pys.data_collection.bonds_processor module": [[3, "module-pys.data_collection.bonds_processor"]], "pys.data_collection.data_integration module": [[3, "module-pys.data_collection.data_integration"]], "pys.data_collection.fundamental_data module": [[3, "module-pys.data_collection.fundamental_data"]], "pys.data_collection.kbd module": [[3, "module-pys.data_collection.kbd"]], "pys.data_collection.kbd_analyzer module": [[3, "module-pys.data_collection.kbd_analyzer"]], "pys.data_collection.market_cap module": [[3, "module-pys.data_collection.market_cap"]], "pys.data_collection.market_data module": [[3, "module-pys.data_collection.market_data"]], "pys.data_collection.news_pipeline module": [[3, "module-pys.data_collection.news_pipeline"]], "pys.data_collection.news_processor package": [[4, null]], "pys.data_collection.news_processor.event_detector module": [[4, "module-pys.data_collection.news_processor.event_detector"]], "pys.data_collection.news_processor.keywords module": [[4, "module-pys.data_collection.news_processor.keywords"]], "pys.data_collection.news_processor.news_feature_extractor module": [[4, "module-pys.data_collection.news_processor.news_feature_extractor"]], "pys.data_collection.news_processor.news_integration module": [[4, "module-pys.data_collection.news_processor.news_integration"]], "pys.data_collection.news_processor.news_preprocessor module": [[4, "module-pys.data_collection.news_processor.news_preprocessor"]], "pys.data_collection.news_processor.news_visualizer module": [[4, "module-pys.data_collection.news_processor.news_visualizer"]], "pys.data_collection.news_processor.sentiment_analysis module": [[4, "module-pys.data_collection.news_processor.sentiment_analysis"]], "pys.data_collection.private_info module": [[3, "module-pys.data_collection.private_info"]], "pys.data_collection.tech_analysis module": [[3, "module-pys.data_collection.tech_analysis"]], "pys.data_collection.technical_indicators module": [[3, "module-pys.data_collection.technical_indicators"]], "pys.improved_pipeline package": [[5, null]], "pys.improved_pipeline.grid_search module": [[5, "module-pys.improved_pipeline.grid_search"]], "pys.improved_pipeline.honest_backtest module": [[5, "module-pys.improved_pipeline.honest_backtest"]], "pys.improved_pipeline.short_selling_support module": [[5, "module-pys.improved_pipeline.short_selling_support"]], "pys.porfolio_optimization package": [[6, null]], "pys.porfolio_optimization.backtester module": [[6, "module-pys.porfolio_optimization.backtester"]], "pys.porfolio_optimization.executor module": [[6, "module-pys.porfolio_optimization.executor"]], "pys.porfolio_optimization.portfolio_optimizer module": [[6, "module-pys.porfolio_optimization.portfolio_optimizer"]], "pys.porfolio_optimization.signal_generator module": [[6, "module-pys.porfolio_optimization.signal_generator"]], "pys.utils package": [[7, null]], "pys.utils.logger module": [[7, "module-pys.utils.logger"]], "pys.utils.monkey_patch module": [[7, "module-pys.utils.monkey_patch"]], "pys.utils.path_helper module": [[7, "module-pys.utils.path_helper"]], "pys.utils.run_with_config module": [[7, "module-pys.utils.run_with_config"]]}, "docnames": ["index", "modules", "pys", "pys.data_collection", "pys.data_collection.news_processor", "pys.improved_pipeline", "pys.porfolio_optimization", "pys.utils"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["index.rst", "modules.rst", "pys.rst", "pys.data_collection.rst", "pys.data_collection.news_processor.rst", "pys.improved_pipeline.rst", "pys.porfolio_optimization.rst", "pys.utils.rst"], "indexentries": {"add_project_root_to_path() (in module pys.utils.path_helper)": [[7, "pys.utils.path_helper.add_project_root_to_path", false]], "analyze_bonds_continuity() (pys.data_collection.bonds_parser.moexbondhistoricalparser method)": [[3, "pys.data_collection.bonds_parser.MOEXBondHistoricalParser.analyze_bonds_continuity", false]], "analyze_common_indicators() (pys.data_collection.fundamental_data.fundamentalpipeline method)": [[3, "pys.data_collection.fundamental_data.FundamentalPipeline.analyze_common_indicators", false]], "analyze_continuity_from_consolidated() (pys.data_collection.bonds_parser.moexbondhistoricalparser method)": [[3, "pys.data_collection.bonds_parser.MOEXBondHistoricalParser.analyze_continuity_from_consolidated", false]], "analyze_news_dataframe() (pys.data_collection.news_processor.sentiment_analysis.sentimentanalyzer method)": [[4, "pys.data_collection.news_processor.sentiment_analysis.SentimentAnalyzer.analyze_news_dataframe", false]], "analyze_stock_impact() (pys.data_collection.news_processor.sentiment_analysis.sentimentanalyzer method)": [[4, "pys.data_collection.news_processor.sentiment_analysis.SentimentAnalyzer.analyze_stock_impact", false]], "analyze_text() (pys.data_collection.news_processor.sentiment_analysis.sentimentanalyzer method)": [[4, "pys.data_collection.news_processor.sentiment_analysis.SentimentAnalyzer.analyze_text", false]], "analyze_text_advanced_ru() (pys.data_collection.news_processor.sentiment_analysis.sentimentanalyzer method)": [[4, "pys.data_collection.news_processor.sentiment_analysis.SentimentAnalyzer.analyze_text_advanced_ru", false]], "analyze_text_simple_ru() (pys.data_collection.news_processor.sentiment_analysis.sentimentanalyzer method)": [[4, "pys.data_collection.news_processor.sentiment_analysis.SentimentAnalyzer.analyze_text_simple_ru", false]], "analyze_text_vader() (pys.data_collection.news_processor.sentiment_analysis.sentimentanalyzer method)": [[4, "pys.data_collection.news_processor.sentiment_analysis.SentimentAnalyzer.analyze_text_vader", false]], "analyze_ticker_news() (pys.data_collection.news_processor.sentiment_analysis.sentimentanalyzer method)": [[4, "pys.data_collection.news_processor.sentiment_analysis.SentimentAnalyzer.analyze_ticker_news", false]], "api_delay (pys.data_collection.bonds_parser.moexbondhistoricalparser attribute)": [[3, "pys.data_collection.bonds_parser.MOEXBondHistoricalParser.API_DELAY", false]], "apply_patch() (in module pys.utils.monkey_patch)": [[7, "pys.utils.monkey_patch.apply_patch", false]], "apply_patches() (in module pys.utils.monkey_patch)": [[7, "pys.utils.monkey_patch.apply_patches", false]], "apply_short_selling_support() (in module pys.improved_pipeline.short_selling_support)": [[5, "pys.improved_pipeline.short_selling_support.apply_short_selling_support", false]], "assess_event_impact() (pys.data_collection.news_processor.event_detector.eventdetector method)": [[4, "pys.data_collection.news_processor.event_detector.EventDetector.assess_event_impact", false]], "backtester (class in pys.porfolio_optimization.backtester)": [[6, "pys.porfolio_optimization.backtester.Backtester", false]], "base_data_dir (pys.data_collection.bonds_parser.moexbondhistoricalparser attribute)": [[3, "pys.data_collection.bonds_parser.MOEXBondHistoricalParser.BASE_DATA_DIR", false]], "baselogger (class in pys.utils.logger)": [[7, "pys.utils.logger.BaseLogger", false]], "board_groups (pys.data_collection.bonds_parser.moexbondhistoricalparser attribute)": [[3, "pys.data_collection.bonds_parser.MOEXBondHistoricalParser.BOARD_GROUPS", false]], "bondsprocessor (class in pys.data_collection.bonds_processor)": [[3, "pys.data_collection.bonds_processor.BondsProcessor", false]], "bondstrategy (class in pys.data_collection.bonds_kbd_strategies)": [[3, "pys.data_collection.bonds_kbd_strategies.BondStrategy", false]], "build_production_portfolio() (pys.porfolio_optimization.executor.pipelineexecutor method)": [[6, "pys.porfolio_optimization.executor.PipelineExecutor.build_production_portfolio", false]], "cache_dir (pys.data_collection.bonds_parser.moexbondhistoricalparser attribute)": [[3, "pys.data_collection.bonds_parser.MOEXBondHistoricalParser.CACHE_DIR", false]], "calculate_bond_metrics() (pys.data_collection.bonds_processor.bondsprocessor method)": [[3, "pys.data_collection.bonds_processor.BondsProcessor.calculate_bond_metrics", false]], "calculate_bonds_returns() (pys.porfolio_optimization.backtester.backtester method)": [[6, "pys.porfolio_optimization.backtester.Backtester.calculate_bonds_returns", false]], "calculate_composite_score() (pys.porfolio_optimization.signal_generator.signalgenerator method)": [[6, "pys.porfolio_optimization.signal_generator.SignalGenerator.calculate_composite_score", false]], "calculate_final_portfolio() (pys.porfolio_optimization.portfolio_optimizer.portfoliooptimizer method)": [[6, "pys.porfolio_optimization.portfolio_optimizer.PortfolioOptimizer.calculate_final_portfolio", false]], "calculate_implied_returns() (pys.porfolio_optimization.portfolio_optimizer.portfoliooptimizer method)": [[6, "pys.porfolio_optimization.portfolio_optimizer.PortfolioOptimizer.calculate_implied_returns", false]], "calculate_indicator_score() (pys.porfolio_optimization.signal_generator.signalgenerator method)": [[6, "pys.porfolio_optimization.signal_generator.SignalGenerator.calculate_indicator_score", false]], "calculate_indicators() (pys.data_collection.technical_indicators.technicalindicators method)": [[3, "pys.data_collection.technical_indicators.TechnicalIndicators.calculate_indicators", false]], "calculate_market_weights() (pys.porfolio_optimization.portfolio_optimizer.portfoliooptimizer method)": [[6, "pys.porfolio_optimization.portfolio_optimizer.PortfolioOptimizer.calculate_market_weights", false]], "calculate_performance_metrics() (pys.porfolio_optimization.backtester.backtester method)": [[6, "pys.porfolio_optimization.backtester.Backtester.calculate_performance_metrics", false]], "calculate_portfolio_performance() (pys.porfolio_optimization.portfolio_optimizer.portfoliooptimizer method)": [[6, "pys.porfolio_optimization.portfolio_optimizer.PortfolioOptimizer.calculate_portfolio_performance", false]], "calculate_portfolio_return() (pys.porfolio_optimization.backtester.backtester method)": [[6, "pys.porfolio_optimization.backtester.Backtester.calculate_portfolio_return", false]], "calculate_quantiles() (pys.porfolio_optimization.signal_generator.signalgenerator method)": [[6, "pys.porfolio_optimization.signal_generator.SignalGenerator.calculate_quantiles", false]], "calculate_returns() (pys.porfolio_optimization.backtester.backtester method)": [[6, "pys.porfolio_optimization.backtester.Backtester.calculate_returns", false]], "calculate_returns_by_ticker() (pys.porfolio_optimization.backtester.backtester method)": [[6, "pys.porfolio_optimization.backtester.Backtester.calculate_returns_by_ticker", false]], "calculate_ticker_fundamental_score() (pys.porfolio_optimization.signal_generator.signalgenerator method)": [[6, "pys.porfolio_optimization.signal_generator.SignalGenerator.calculate_ticker_fundamental_score", false]], "clean_table() (pys.data_collection.fundamental_data.smartlabyearlyparser method)": [[3, "pys.data_collection.fundamental_data.SmartLabYearlyParser.clean_table", false]], "clean_text() (pys.data_collection.news_processor.news_preprocessor.newspreprocessor method)": [[4, "pys.data_collection.news_processor.news_preprocessor.NewsPreprocessor.clean_text", false]], "clear_cache() (pys.data_collection.bonds_parser.moexbondhistoricalparser method)": [[3, "pys.data_collection.bonds_parser.MOEXBondHistoricalParser.clear_cache", false]], "convert_news_to_views() (pys.data_collection.news_processor.news_integration.newsintegration method)": [[4, "pys.data_collection.news_processor.news_integration.NewsIntegration.convert_news_to_views", false]], "copy_bond_portfolio() (pys.porfolio_optimization.executor.pipelineexecutor method)": [[6, "pys.porfolio_optimization.executor.PipelineExecutor.copy_bond_portfolio", false]], "create_combined_portfolio() (pys.porfolio_optimization.executor.pipelineexecutor method)": [[6, "pys.porfolio_optimization.executor.PipelineExecutor.create_combined_portfolio", false]], "create_combined_report() (in module pys.data_collection.bonds_kbd_pipeline)": [[3, "pys.data_collection.bonds_kbd_pipeline.create_combined_report", false]], "create_daily_sentiment_series() (pys.data_collection.news_processor.sentiment_analysis.sentimentanalyzer method)": [[4, "pys.data_collection.news_processor.sentiment_analysis.SentimentAnalyzer.create_daily_sentiment_series", false]], "create_event_time_series() (pys.data_collection.news_processor.event_detector.eventdetector method)": [[4, "pys.data_collection.news_processor.event_detector.EventDetector.create_event_time_series", false]], "create_ml_features() (pys.data_collection.news_processor.news_integration.newsintegration method)": [[4, "pys.data_collection.news_processor.news_integration.NewsIntegration.create_ml_features", false]], "create_news_dashboard() (pys.data_collection.news_processor.news_visualizer.newsvisualizer method)": [[4, "pys.data_collection.news_processor.news_visualizer.NewsVisualizer.create_news_dashboard", false]], "create_short_portfolio() (pys.porfolio_optimization.executor.pipelineexecutor method)": [[6, "pys.porfolio_optimization.executor.PipelineExecutor.create_short_portfolio", false]], "create_shortlist() (pys.porfolio_optimization.signal_generator.signalgenerator method)": [[6, "pys.porfolio_optimization.signal_generator.SignalGenerator.create_shortlist", false]], "create_summary_report() (pys.data_collection.tech_analysis.techanalysispipeline method)": [[3, "pys.data_collection.tech_analysis.TechAnalysisPipeline.create_summary_report", false]], "create_summary_report() (pys.porfolio_optimization.executor.pipelineexecutor method)": [[6, "pys.porfolio_optimization.executor.PipelineExecutor.create_summary_report", false]], "create_time_series_features() (pys.data_collection.news_processor.news_feature_extractor.newsfeatureextractor method)": [[4, "pys.data_collection.news_processor.news_feature_extractor.NewsFeatureExtractor.create_time_series_features", false]], "create_topic_features() (pys.data_collection.news_processor.news_feature_extractor.newsfeatureextractor method)": [[4, "pys.data_collection.news_processor.news_feature_extractor.NewsFeatureExtractor.create_topic_features", false]], "dataintegrator (class in pys.data_collection.data_integration)": [[3, "pys.data_collection.data_integration.DataIntegrator", false]], "datastorage (class in pys.data_collection.market_data)": [[3, "pys.data_collection.market_data.DataStorage", false]], "detect_events() (pys.data_collection.news_processor.event_detector.eventdetector method)": [[4, "pys.data_collection.news_processor.event_detector.EventDetector.detect_events", false]], "download_for_ticker() (pys.data_collection.market_data.tinkoffdatadownloader method)": [[3, "pys.data_collection.market_data.TinkoffDataDownloader.download_for_ticker", false]], "eventdetector (class in pys.data_collection.news_processor.event_detector)": [[4, "pys.data_collection.news_processor.event_detector.EventDetector", false]], "extract_keyword_mentions() (pys.data_collection.news_processor.news_feature_extractor.newsfeatureextractor method)": [[4, "pys.data_collection.news_processor.news_feature_extractor.NewsFeatureExtractor.extract_keyword_mentions", false]], "extract_raw_data() (pys.data_collection.market_data.datastorage method)": [[3, "pys.data_collection.market_data.DataStorage.extract_raw_data", false]], "extract_topics_lda() (pys.data_collection.news_processor.news_feature_extractor.newsfeatureextractor method)": [[4, "pys.data_collection.news_processor.news_feature_extractor.NewsFeatureExtractor.extract_topics_lda", false]], "fetch_page() (pys.data_collection.fundamental_data.smartlabyearlyparser method)": [[3, "pys.data_collection.fundamental_data.SmartLabYearlyParser.fetch_page", false]], "filter_existing_data() (pys.data_collection.bonds_parser.moexbondhistoricalparser method)": [[3, "pys.data_collection.bonds_parser.MOEXBondHistoricalParser.filter_existing_data", false]], "find_optimal_threshold() (pys.data_collection.bonds_parser.moexbondhistoricalparser method)": [[3, "pys.data_collection.bonds_parser.MOEXBondHistoricalParser.find_optimal_threshold", false]], "find_optimal_threshold_from_consolidated() (pys.data_collection.bonds_parser.moexbondhistoricalparser method)": [[3, "pys.data_collection.bonds_parser.MOEXBondHistoricalParser.find_optimal_threshold_from_consolidated", false]], "fundamentalpipeline (class in pys.data_collection.fundamental_data)": [[3, "pys.data_collection.fundamental_data.FundamentalPipeline", false]], "generate_complete_dataset() (pys.data_collection.bonds_parser.moexbondhistoricalparser method)": [[3, "pys.data_collection.bonds_parser.MOEXBondHistoricalParser.generate_complete_dataset", false]], "generate_dataset_with_threshold() (pys.data_collection.bonds_parser.moexbondhistoricalparser method)": [[3, "pys.data_collection.bonds_parser.MOEXBondHistoricalParser.generate_dataset_with_threshold", false]], "generate_efficient_frontier() (pys.porfolio_optimization.portfolio_optimizer.portfoliooptimizer method)": [[6, "pys.porfolio_optimization.portfolio_optimizer.PortfolioOptimizer.generate_efficient_frontier", false]], "generate_portfolio_analysis() (pys.data_collection.bonds_processor.bondsprocessor method)": [[3, "pys.data_collection.bonds_processor.BondsProcessor.generate_portfolio_analysis", false]], "generate_signals() (pys.porfolio_optimization.executor.pipelineexecutor method)": [[6, "pys.porfolio_optimization.executor.PipelineExecutor.generate_signals", false]], "generate_signals() (pys.porfolio_optimization.signal_generator.signalgenerator method)": [[6, "pys.porfolio_optimization.signal_generator.SignalGenerator.generate_signals", false]], "get_available_bonds() (pys.data_collection.bonds_parser.moexbondhistoricalparser method)": [[3, "pys.data_collection.bonds_parser.MOEXBondHistoricalParser.get_available_bonds", false]], "get_base_path() (in module pys.utils.path_helper)": [[7, "pys.utils.path_helper.get_base_path", false]], "get_bonds_for_period() (pys.data_collection.bonds_parser.moexbondhistoricalparser method)": [[3, "pys.data_collection.bonds_parser.MOEXBondHistoricalParser.get_bonds_for_period", false]], "get_bonds_for_portfolio() (pys.data_collection.bonds_processor.bondsprocessor method)": [[3, "pys.data_collection.bonds_processor.BondsProcessor.get_bonds_for_portfolio", false]], "get_bonds_recommendations() (pys.data_collection.kbd_analyzer.kbdanalyzer method)": [[3, "pys.data_collection.kbd_analyzer.KBDAnalyzer.get_bonds_recommendations", false]], "get_comprehensive_recommendations() (pys.data_collection.kbd_analyzer.kbdanalyzer method)": [[3, "pys.data_collection.kbd_analyzer.KBDAnalyzer.get_comprehensive_recommendations", false]], "get_correct_figi() (pys.data_collection.market_data.tinkoffdatadownloader method)": [[3, "pys.data_collection.market_data.TinkoffDataDownloader.get_correct_figi", false]], "get_data() (pys.data_collection.market_data.marketdatamanager method)": [[3, "pys.data_collection.market_data.MarketDataManager.get_data", false]], "get_data_for_multiple_tickers() (pys.data_collection.market_data.marketdatamanager method)": [[3, "pys.data_collection.market_data.MarketDataManager.get_data_for_multiple_tickers", false]], "get_figi() (pys.data_collection.market_data.tinkoffdatadownloader method)": [[3, "pys.data_collection.market_data.TinkoffDataDownloader.get_figi", false]], "get_filter_params() (pys.data_collection.bonds_kbd_strategies.bondstrategy method)": [[3, "pys.data_collection.bonds_kbd_strategies.BondStrategy.get_filter_params", false]], "get_filter_params() (pys.data_collection.bonds_kbd_strategies.kbdrateexpectationstrategy method)": [[3, "pys.data_collection.bonds_kbd_strategies.KBDRateExpectationStrategy.get_filter_params", false]], "get_isin() (pys.data_collection.market_data.tinkoffdatadownloader method)": [[3, "pys.data_collection.market_data.TinkoffDataDownloader.get_isin", false]], "get_kbd() (pys.data_collection.kbd.kbddownloader method)": [[3, "pys.data_collection.kbd.KBDDownloader.get_kbd", false]], "get_latest_bonds() (pys.data_collection.bonds_parser.moexbondhistoricalparser method)": [[3, "pys.data_collection.bonds_parser.MOEXBondHistoricalParser.get_latest_bonds", false]], "get_latest_kbd_metrics() (pys.data_collection.kbd_analyzer.kbdanalyzer method)": [[3, "pys.data_collection.kbd_analyzer.KBDAnalyzer.get_latest_kbd_metrics", false]], "get_missing_date_ranges() (pys.data_collection.market_data.datastorage method)": [[3, "pys.data_collection.market_data.DataStorage.get_missing_date_ranges", false]], "get_optimal_weighting_strategy() (pys.data_collection.kbd_analyzer.kbdanalyzer method)": [[3, "pys.data_collection.kbd_analyzer.KBDAnalyzer.get_optimal_weighting_strategy", false]], "get_portfolio_params() (pys.data_collection.bonds_kbd_strategies.bondstrategy method)": [[3, "pys.data_collection.bonds_kbd_strategies.BondStrategy.get_portfolio_params", false]], "get_portfolio_params() (pys.data_collection.bonds_kbd_strategies.kbdrateexpectationstrategy method)": [[3, "pys.data_collection.bonds_kbd_strategies.KBDRateExpectationStrategy.get_portfolio_params", false]], "get_project_root() (in module pys.utils.path_helper)": [[7, "pys.utils.path_helper.get_project_root", false]], "get_ticker_processed_path() (pys.data_collection.market_data.datastorage method)": [[3, "pys.data_collection.market_data.DataStorage.get_ticker_processed_path", false]], "get_ticker_raw_path() (pys.data_collection.market_data.datastorage method)": [[3, "pys.data_collection.market_data.DataStorage.get_ticker_raw_path", false]], "get_uid() (pys.data_collection.market_data.tinkoffdatadownloader method)": [[3, "pys.data_collection.market_data.TinkoffDataDownloader.get_uid", false]], "gridsearch (class in pys.improved_pipeline.grid_search)": [[5, "pys.improved_pipeline.grid_search.GridSearch", false]], "honestbacktester (class in pys.improved_pipeline.honest_backtest)": [[5, "pys.improved_pipeline.honest_backtest.HonestBacktester", false]], "incorporate_views() (pys.porfolio_optimization.portfolio_optimizer.portfoliooptimizer method)": [[6, "pys.porfolio_optimization.portfolio_optimizer.PortfolioOptimizer.incorporate_views", false]], "initialize_instruments() (pys.data_collection.market_data.tinkoffdatadownloader method)": [[3, "pys.data_collection.market_data.TinkoffDataDownloader.initialize_instruments", false]], "is_figi_correct() (pys.data_collection.market_data.tinkoffdatadownloader method)": [[3, "pys.data_collection.market_data.TinkoffDataDownloader.is_figi_correct", false]], "is_server() (in module pys.utils.path_helper)": [[7, "pys.utils.path_helper.is_server", false]], "kbdanalyzer (class in pys.data_collection.kbd_analyzer)": [[3, "pys.data_collection.kbd_analyzer.KBDAnalyzer", false]], "kbddownloader (class in pys.data_collection.kbd)": [[3, "pys.data_collection.kbd.KBDDownloader", false]], "kbdrateexpectationstrategy (class in pys.data_collection.bonds_kbd_strategies)": [[3, "pys.data_collection.bonds_kbd_strategies.KBDRateExpectationStrategy", false]], "load_and_process_all_bonds() (pys.data_collection.bonds_processor.bondsprocessor method)": [[3, "pys.data_collection.bonds_processor.BondsProcessor.load_and_process_all_bonds", false]], "load_bonds_data() (pys.porfolio_optimization.backtester.backtester method)": [[6, "pys.porfolio_optimization.backtester.Backtester.load_bonds_data", false]], "load_data() (pys.data_collection.technical_indicators.technicalindicators method)": [[3, "pys.data_collection.technical_indicators.TechnicalIndicators.load_data", false]], "load_data() (pys.porfolio_optimization.backtester.backtester method)": [[6, "pys.porfolio_optimization.backtester.Backtester.load_data", false]], "load_data() (pys.porfolio_optimization.portfolio_optimizer.portfoliooptimizer method)": [[6, "pys.porfolio_optimization.portfolio_optimizer.PortfolioOptimizer.load_data", false]], "load_data() (pys.porfolio_optimization.signal_generator.signalgenerator method)": [[6, "pys.porfolio_optimization.signal_generator.SignalGenerator.load_data", false]], "load_fundamental_data() (pys.porfolio_optimization.signal_generator.signalgenerator method)": [[6, "pys.porfolio_optimization.signal_generator.SignalGenerator.load_fundamental_data", false]], "load_market_caps() (pys.porfolio_optimization.portfolio_optimizer.portfoliooptimizer method)": [[6, "pys.porfolio_optimization.portfolio_optimizer.PortfolioOptimizer.load_market_caps", false]], "load_multiple_tickers() (pys.data_collection.data_integration.dataintegrator method)": [[3, "pys.data_collection.data_integration.DataIntegrator.load_multiple_tickers", false]], "load_previous_recommendations() (pys.data_collection.bonds_processor.bondsprocessor method)": [[3, "pys.data_collection.bonds_processor.BondsProcessor.load_previous_recommendations", false]], "load_processed_data() (pys.data_collection.market_data.datastorage method)": [[3, "pys.data_collection.market_data.DataStorage.load_processed_data", false]], "load_raw_csv_files() (pys.data_collection.market_data.datastorage method)": [[3, "pys.data_collection.market_data.DataStorage.load_raw_csv_files", false]], "load_risk_free_portfolio() (pys.porfolio_optimization.portfolio_optimizer.portfoliooptimizer method)": [[6, "pys.porfolio_optimization.portfolio_optimizer.PortfolioOptimizer.load_risk_free_portfolio", false]], "load_ticker_data() (pys.data_collection.data_integration.dataintegrator method)": [[3, "pys.data_collection.data_integration.DataIntegrator.load_ticker_data", false]], "log_end_process() (pys.utils.logger.baselogger method)": [[7, "pys.utils.logger.BaseLogger.log_end_process", false]], "log_exception() (pys.utils.logger.baselogger method)": [[7, "pys.utils.logger.BaseLogger.log_exception", false]], "log_start_process() (pys.utils.logger.baselogger method)": [[7, "pys.utils.logger.BaseLogger.log_start_process", false]], "main() (in module pys.data_collection.news_pipeline)": [[3, "pys.data_collection.news_pipeline.main", false]], "marketcapparser (class in pys.data_collection.market_cap)": [[3, "pys.data_collection.market_cap.MarketCapParser", false]], "marketdatamanager (class in pys.data_collection.market_data)": [[3, "pys.data_collection.market_data.MarketDataManager", false]], "marketdatapipeline (class in pys.data_collection.market_data)": [[3, "pys.data_collection.market_data.MarketDataPipeline", false]], "merge_news_with_price_data() (pys.data_collection.news_processor.news_integration.newsintegration method)": [[4, "pys.data_collection.news_processor.news_integration.NewsIntegration.merge_news_with_price_data", false]], "merge_with_existing() (in module pys.data_collection.news_pipeline)": [[3, "pys.data_collection.news_pipeline.merge_with_existing", false]], "modify_backtester_for_shorts() (in module pys.improved_pipeline.short_selling_support)": [[5, "pys.improved_pipeline.short_selling_support.modify_backtester_for_shorts", false]], "modify_portfolio_optimizer_for_shorts() (in module pys.improved_pipeline.short_selling_support)": [[5, "pys.improved_pipeline.short_selling_support.modify_portfolio_optimizer_for_shorts", false]], "modify_signal_generator_for_shorts() (in module pys.improved_pipeline.short_selling_support)": [[5, "pys.improved_pipeline.short_selling_support.modify_signal_generator_for_shorts", false]], "module": [[2, "module-pys", false], [3, "module-pys.data_collection", false], [3, "module-pys.data_collection.bonds_kbd_pipeline", false], [3, "module-pys.data_collection.bonds_kbd_strategies", false], [3, "module-pys.data_collection.bonds_parser", false], [3, "module-pys.data_collection.bonds_processor", false], [3, "module-pys.data_collection.data_integration", false], [3, "module-pys.data_collection.fundamental_data", false], [3, "module-pys.data_collection.kbd", false], [3, "module-pys.data_collection.kbd_analyzer", false], [3, "module-pys.data_collection.market_cap", false], [3, "module-pys.data_collection.market_data", false], [3, "module-pys.data_collection.news_pipeline", false], [3, "module-pys.data_collection.private_info", false], [3, "module-pys.data_collection.tech_analysis", false], [3, "module-pys.data_collection.technical_indicators", false], [4, "module-pys.data_collection.news_processor", false], [4, "module-pys.data_collection.news_processor.event_detector", false], [4, "module-pys.data_collection.news_processor.keywords", false], [4, "module-pys.data_collection.news_processor.news_feature_extractor", false], [4, "module-pys.data_collection.news_processor.news_integration", false], [4, "module-pys.data_collection.news_processor.news_preprocessor", false], [4, "module-pys.data_collection.news_processor.news_visualizer", false], [4, "module-pys.data_collection.news_processor.sentiment_analysis", false], [5, "module-pys.improved_pipeline", false], [5, "module-pys.improved_pipeline.grid_search", false], [5, "module-pys.improved_pipeline.honest_backtest", false], [5, "module-pys.improved_pipeline.short_selling_support", false], [6, "module-pys.porfolio_optimization", false], [6, "module-pys.porfolio_optimization.backtester", false], [6, "module-pys.porfolio_optimization.executor", false], [6, "module-pys.porfolio_optimization.portfolio_optimizer", false], [6, "module-pys.porfolio_optimization.signal_generator", false], [7, "module-pys.utils", false], [7, "module-pys.utils.logger", false], [7, "module-pys.utils.monkey_patch", false], [7, "module-pys.utils.path_helper", false], [7, "module-pys.utils.run_with_config", false]], "moexbondhistoricalparser (class in pys.data_collection.bonds_parser)": [[3, "pys.data_collection.bonds_parser.MOEXBondHistoricalParser", false]], "negative_sharpe_ratio() (pys.porfolio_optimization.portfolio_optimizer.portfoliooptimizer method)": [[6, "pys.porfolio_optimization.portfolio_optimizer.PortfolioOptimizer.negative_sharpe_ratio", false]], "newsfeatureextractor (class in pys.data_collection.news_processor.news_feature_extractor)": [[4, "pys.data_collection.news_processor.news_feature_extractor.NewsFeatureExtractor", false]], "newsintegration (class in pys.data_collection.news_processor.news_integration)": [[4, "pys.data_collection.news_processor.news_integration.NewsIntegration", false]], "newspipeline (class in pys.data_collection.news_pipeline)": [[3, "pys.data_collection.news_pipeline.NewsPipeline", false]], "newspreprocessor (class in pys.data_collection.news_processor.news_preprocessor)": [[4, "pys.data_collection.news_processor.news_preprocessor.NewsPreprocessor", false]], "newsvisualizer (class in pys.data_collection.news_processor.news_visualizer)": [[4, "pys.data_collection.news_processor.news_visualizer.NewsVisualizer", false]], "optimize_portfolio() (pys.porfolio_optimization.portfolio_optimizer.portfoliooptimizer method)": [[6, "pys.porfolio_optimization.portfolio_optimizer.PortfolioOptimizer.optimize_portfolio", false]], "optimize_standard_portfolio() (pys.porfolio_optimization.executor.pipelineexecutor method)": [[6, "pys.porfolio_optimization.executor.PipelineExecutor.optimize_standard_portfolio", false]], "parse_interval() (pys.data_collection.bonds_parser.moexbondhistoricalparser method)": [[3, "pys.data_collection.bonds_parser.MOEXBondHistoricalParser.parse_interval", false]], "parse_yearly_tables() (pys.data_collection.fundamental_data.smartlabyearlyparser method)": [[3, "pys.data_collection.fundamental_data.SmartLabYearlyParser.parse_yearly_tables", false]], "pipelineexecutor (class in pys.porfolio_optimization.executor)": [[6, "pys.porfolio_optimization.executor.PipelineExecutor", false]], "plot_efficient_frontier() (pys.porfolio_optimization.portfolio_optimizer.portfoliooptimizer method)": [[6, "pys.porfolio_optimization.portfolio_optimizer.PortfolioOptimizer.plot_efficient_frontier", false]], "plot_enhanced_efficient_frontier() (pys.porfolio_optimization.portfolio_optimizer.portfoliooptimizer method)": [[6, "pys.porfolio_optimization.portfolio_optimizer.PortfolioOptimizer.plot_enhanced_efficient_frontier", false]], "plot_event_distribution() (pys.data_collection.news_processor.news_visualizer.newsvisualizer method)": [[4, "pys.data_collection.news_processor.news_visualizer.NewsVisualizer.plot_event_distribution", false]], "plot_macd() (pys.data_collection.technical_indicators.technicalindicators method)": [[3, "pys.data_collection.technical_indicators.TechnicalIndicators.plot_macd", false]], "plot_price_with_indicators() (pys.data_collection.technical_indicators.technicalindicators method)": [[3, "pys.data_collection.technical_indicators.TechnicalIndicators.plot_price_with_indicators", false]], "plot_sentiment_by_event_type() (pys.data_collection.news_processor.news_visualizer.newsvisualizer method)": [[4, "pys.data_collection.news_processor.news_visualizer.NewsVisualizer.plot_sentiment_by_event_type", false]], "plot_sentiment_distribution() (pys.data_collection.news_processor.news_visualizer.newsvisualizer method)": [[4, "pys.data_collection.news_processor.news_visualizer.NewsVisualizer.plot_sentiment_distribution", false]], "plot_sentiment_time_series() (pys.data_collection.news_processor.news_visualizer.newsvisualizer method)": [[4, "pys.data_collection.news_processor.news_visualizer.NewsVisualizer.plot_sentiment_time_series", false]], "portfoliooptimizer (class in pys.porfolio_optimization.portfolio_optimizer)": [[6, "pys.porfolio_optimization.portfolio_optimizer.PortfolioOptimizer", false]], "prepare_returns() (pys.porfolio_optimization.portfolio_optimizer.portfoliooptimizer method)": [[6, "pys.porfolio_optimization.portfolio_optimizer.PortfolioOptimizer.prepare_returns", false]], "prepare_returns_standard() (pys.porfolio_optimization.portfolio_optimizer.portfoliooptimizer method)": [[6, "pys.porfolio_optimization.portfolio_optimizer.PortfolioOptimizer.prepare_returns_standard", false]], "prepare_returns_with_shorts() (pys.porfolio_optimization.portfolio_optimizer.portfoliooptimizer method)": [[6, "pys.porfolio_optimization.portfolio_optimizer.PortfolioOptimizer.prepare_returns_with_shorts", false]], "prepare_views_from_signals() (pys.porfolio_optimization.portfolio_optimizer.portfoliooptimizer method)": [[6, "pys.porfolio_optimization.portfolio_optimizer.PortfolioOptimizer.prepare_views_from_signals", false]], "preprocess_dataframe() (pys.data_collection.fundamental_data.smartlabyearlyparser method)": [[3, "pys.data_collection.fundamental_data.SmartLabYearlyParser.preprocess_dataframe", false]], "process_all_tickers() (pys.data_collection.news_processor.news_preprocessor.newspreprocessor method)": [[4, "pys.data_collection.news_processor.news_preprocessor.NewsPreprocessor.process_all_tickers", false]], "process_bond_pipeline() (pys.porfolio_optimization.executor.pipelineexecutor method)": [[6, "pys.porfolio_optimization.executor.PipelineExecutor.process_bond_pipeline", false]], "process_direct_data() (pys.data_collection.bonds_processor.bondsprocessor method)": [[3, "pys.data_collection.bonds_processor.BondsProcessor.process_direct_data", false]], "process_news_file() (pys.data_collection.news_processor.news_preprocessor.newspreprocessor method)": [[4, "pys.data_collection.news_processor.news_preprocessor.NewsPreprocessor.process_news_file", false]], "process_ticker_news() (pys.data_collection.news_processor.news_preprocessor.newspreprocessor method)": [[4, "pys.data_collection.news_processor.news_preprocessor.NewsPreprocessor.process_ticker_news", false]], "process_tickers() (pys.data_collection.fundamental_data.fundamentalpipeline method)": [[3, "pys.data_collection.fundamental_data.FundamentalPipeline.process_tickers", false]], "pys": [[2, "module-pys", false]], "pys.data_collection": [[3, "module-pys.data_collection", false]], "pys.data_collection.bonds_kbd_pipeline": [[3, "module-pys.data_collection.bonds_kbd_pipeline", false]], "pys.data_collection.bonds_kbd_strategies": [[3, "module-pys.data_collection.bonds_kbd_strategies", false]], "pys.data_collection.bonds_parser": [[3, "module-pys.data_collection.bonds_parser", false]], "pys.data_collection.bonds_processor": [[3, "module-pys.data_collection.bonds_processor", false]], "pys.data_collection.data_integration": [[3, "module-pys.data_collection.data_integration", false]], "pys.data_collection.fundamental_data": [[3, "module-pys.data_collection.fundamental_data", false]], "pys.data_collection.kbd": [[3, "module-pys.data_collection.kbd", false]], "pys.data_collection.kbd_analyzer": [[3, "module-pys.data_collection.kbd_analyzer", false]], "pys.data_collection.market_cap": [[3, "module-pys.data_collection.market_cap", false]], "pys.data_collection.market_data": [[3, "module-pys.data_collection.market_data", false]], "pys.data_collection.news_pipeline": [[3, "module-pys.data_collection.news_pipeline", false]], "pys.data_collection.news_processor": [[4, "module-pys.data_collection.news_processor", false]], "pys.data_collection.news_processor.event_detector": [[4, "module-pys.data_collection.news_processor.event_detector", false]], "pys.data_collection.news_processor.keywords": [[4, "module-pys.data_collection.news_processor.keywords", false]], "pys.data_collection.news_processor.news_feature_extractor": [[4, "module-pys.data_collection.news_processor.news_feature_extractor", false]], "pys.data_collection.news_processor.news_integration": [[4, "module-pys.data_collection.news_processor.news_integration", false]], "pys.data_collection.news_processor.news_preprocessor": [[4, "module-pys.data_collection.news_processor.news_preprocessor", false]], "pys.data_collection.news_processor.news_visualizer": [[4, "module-pys.data_collection.news_processor.news_visualizer", false]], "pys.data_collection.news_processor.sentiment_analysis": [[4, "module-pys.data_collection.news_processor.sentiment_analysis", false]], "pys.data_collection.private_info": [[3, "module-pys.data_collection.private_info", false]], "pys.data_collection.tech_analysis": [[3, "module-pys.data_collection.tech_analysis", false]], "pys.data_collection.technical_indicators": [[3, "module-pys.data_collection.technical_indicators", false]], "pys.improved_pipeline": [[5, "module-pys.improved_pipeline", false]], "pys.improved_pipeline.grid_search": [[5, "module-pys.improved_pipeline.grid_search", false]], "pys.improved_pipeline.honest_backtest": [[5, "module-pys.improved_pipeline.honest_backtest", false]], "pys.improved_pipeline.short_selling_support": [[5, "module-pys.improved_pipeline.short_selling_support", false]], "pys.porfolio_optimization": [[6, "module-pys.porfolio_optimization", false]], "pys.porfolio_optimization.backtester": [[6, "module-pys.porfolio_optimization.backtester", false]], "pys.porfolio_optimization.executor": [[6, "module-pys.porfolio_optimization.executor", false]], "pys.porfolio_optimization.portfolio_optimizer": [[6, "module-pys.porfolio_optimization.portfolio_optimizer", false]], "pys.porfolio_optimization.signal_generator": [[6, "module-pys.porfolio_optimization.signal_generator", false]], "pys.utils": [[7, "module-pys.utils", false]], "pys.utils.logger": [[7, "module-pys.utils.logger", false]], "pys.utils.monkey_patch": [[7, "module-pys.utils.monkey_patch", false]], "pys.utils.path_helper": [[7, "module-pys.utils.path_helper", false]], "pys.utils.run_with_config": [[7, "module-pys.utils.run_with_config", false]], "rank_bonds() (pys.data_collection.bonds_kbd_strategies.bondstrategy method)": [[3, "pys.data_collection.bonds_kbd_strategies.BondStrategy.rank_bonds", false]], "rank_bonds() (pys.data_collection.bonds_kbd_strategies.kbdrateexpectationstrategy method)": [[3, "pys.data_collection.bonds_kbd_strategies.KBDRateExpectationStrategy.rank_bonds", false]], "resample_ohlcv() (pys.data_collection.market_data.timeframeconverter static method)": [[3, "pys.data_collection.market_data.TimeframeConverter.resample_ohlcv", false]], "run() (pys.data_collection.market_data.marketdatapipeline method)": [[3, "pys.data_collection.market_data.MarketDataPipeline.run", false]], "run() (pys.improved_pipeline.honest_backtest.honestbacktester method)": [[5, "pys.improved_pipeline.honest_backtest.HonestBacktester.run", false]], "run_all_optimization_models() (in module pys.porfolio_optimization.portfolio_optimizer)": [[6, "pys.porfolio_optimization.portfolio_optimizer.run_all_optimization_models", false]], "run_bond_pipeline() (in module pys.data_collection.bonds_parser)": [[3, "pys.data_collection.bonds_parser.run_bond_pipeline", false]], "run_bond_selection_with_kbd() (in module pys.data_collection.bonds_kbd_pipeline)": [[3, "pys.data_collection.bonds_kbd_pipeline.run_bond_selection_with_kbd", false]], "run_grid_search() (pys.improved_pipeline.grid_search.gridsearch method)": [[5, "pys.improved_pipeline.grid_search.GridSearch.run_grid_search", false]], "run_grid_search_pipeline() (in module pys.improved_pipeline.grid_search)": [[5, "pys.improved_pipeline.grid_search.run_grid_search_pipeline", false]], "run_honest_backtest() (in module pys.improved_pipeline.honest_backtest)": [[5, "pys.improved_pipeline.honest_backtest.run_honest_backtest", false]], "run_pipeline() (pys.data_collection.data_integration.dataintegrator method)": [[3, "pys.data_collection.data_integration.DataIntegrator.run_pipeline", false]], "run_pipeline() (pys.data_collection.news_pipeline.newspipeline method)": [[3, "pys.data_collection.news_pipeline.NewsPipeline.run_pipeline", false]], "run_pipeline() (pys.data_collection.tech_analysis.techanalysispipeline method)": [[3, "pys.data_collection.tech_analysis.TechAnalysisPipeline.run_pipeline", false]], "run_pipeline() (pys.porfolio_optimization.backtester.backtester method)": [[6, "pys.porfolio_optimization.backtester.Backtester.run_pipeline", false]], "run_pipeline() (pys.porfolio_optimization.executor.pipelineexecutor method)": [[6, "pys.porfolio_optimization.executor.PipelineExecutor.run_pipeline", false]], "run_pipeline() (pys.porfolio_optimization.portfolio_optimizer.portfoliooptimizer method)": [[6, "pys.porfolio_optimization.portfolio_optimizer.PortfolioOptimizer.run_pipeline", false]], "run_pipeline() (pys.porfolio_optimization.signal_generator.signalgenerator method)": [[6, "pys.porfolio_optimization.signal_generator.SignalGenerator.run_pipeline", false]], "run_pipeline_bonds_processor() (in module pys.data_collection.bonds_processor)": [[3, "pys.data_collection.bonds_processor.run_pipeline_bonds_processor", false]], "run_pipeline_fundamental() (in module pys.data_collection.fundamental_data)": [[3, "pys.data_collection.fundamental_data.run_pipeline_fundamental", false]], "run_pipeline_integration() (in module pys.data_collection.data_integration)": [[3, "pys.data_collection.data_integration.run_pipeline_integration", false]], "run_pipeline_kbd_parser() (in module pys.data_collection.kbd)": [[3, "pys.data_collection.kbd.run_pipeline_kbd_parser", false]], "run_pipeline_market() (in module pys.data_collection.market_data)": [[3, "pys.data_collection.market_data.run_pipeline_market", false]], "run_pipeline_market_cap() (in module pys.data_collection.market_cap)": [[3, "pys.data_collection.market_cap.run_pipeline_market_cap", false]], "run_pipeline_market_cap() (pys.data_collection.market_cap.marketcapparser method)": [[3, "pys.data_collection.market_cap.MarketCapParser.run_pipeline_market_cap", false]], "run_pipeline_signal_generator() (in module pys.porfolio_optimization.signal_generator)": [[6, "pys.porfolio_optimization.signal_generator.run_pipeline_signal_generator", false]], "run_pipeline_technical() (in module pys.data_collection.tech_analysis)": [[3, "pys.data_collection.tech_analysis.run_pipeline_technical", false]], "run_short_selling_pipeline() (in module pys.improved_pipeline.short_selling_support)": [[5, "pys.improved_pipeline.short_selling_support.run_short_selling_pipeline", false]], "run_with_config() (in module pys.utils.run_with_config)": [[7, "pys.utils.run_with_config.run_with_config", false]], "save_data() (pys.data_collection.fundamental_data.fundamentalpipeline method)": [[3, "pys.data_collection.fundamental_data.FundamentalPipeline.save_data", false]], "save_events_data() (in module pys.data_collection.news_pipeline)": [[3, "pys.data_collection.news_pipeline.save_events_data", false]], "save_processed_data() (pys.data_collection.market_data.datastorage method)": [[3, "pys.data_collection.market_data.DataStorage.save_processed_data", false]], "save_sentiment_data() (in module pys.data_collection.news_pipeline)": [[3, "pys.data_collection.news_pipeline.save_sentiment_data", false]], "save_shortlist() (pys.porfolio_optimization.signal_generator.signalgenerator method)": [[6, "pys.porfolio_optimization.signal_generator.SignalGenerator.save_shortlist", false]], "select_best_portfolio() (pys.porfolio_optimization.executor.pipelineexecutor method)": [[6, "pys.porfolio_optimization.executor.PipelineExecutor.select_best_portfolio", false]], "sentimentanalyzer (class in pys.data_collection.news_processor.sentiment_analysis)": [[4, "pys.data_collection.news_processor.sentiment_analysis.SentimentAnalyzer", false]], "set_cbr_meetings() (pys.data_collection.news_processor.sentiment_analysis.sentimentanalyzer method)": [[4, "pys.data_collection.news_processor.sentiment_analysis.SentimentAnalyzer.set_cbr_meetings", false]], "setup_logger() (pys.utils.logger.baselogger method)": [[7, "pys.utils.logger.BaseLogger.setup_logger", false]], "setup_python_path() (in module pys.utils.path_helper)": [[7, "pys.utils.path_helper.setup_python_path", false]], "signalgenerator (class in pys.porfolio_optimization.signal_generator)": [[6, "pys.porfolio_optimization.signal_generator.SignalGenerator", false]], "smartlabyearlyparser (class in pys.data_collection.fundamental_data)": [[3, "pys.data_collection.fundamental_data.SmartLabYearlyParser", false]], "store_raw_data() (pys.data_collection.market_data.datastorage method)": [[3, "pys.data_collection.market_data.DataStorage.store_raw_data", false]], "techanalysispipeline (class in pys.data_collection.tech_analysis)": [[3, "pys.data_collection.tech_analysis.TechAnalysisPipeline", false]], "technicalindicators (class in pys.data_collection.technical_indicators)": [[3, "pys.data_collection.technical_indicators.TechnicalIndicators", false]], "timeframeconverter (class in pys.data_collection.market_data)": [[3, "pys.data_collection.market_data.TimeframeConverter", false]], "tinkoffdatadownloader (class in pys.data_collection.market_data)": [[3, "pys.data_collection.market_data.TinkoffDataDownloader", false]], "to_float() (pys.data_collection.fundamental_data.smartlabyearlyparser static method)": [[3, "pys.data_collection.fundamental_data.SmartLabYearlyParser.to_float", false]], "update_daily_sentiment() (in module pys.data_collection.news_pipeline)": [[3, "pys.data_collection.news_pipeline.update_daily_sentiment", false]], "visualize_bond_universe() (pys.data_collection.bonds_processor.bondsprocessor method)": [[3, "pys.data_collection.bonds_processor.BondsProcessor.visualize_bond_universe", false]], "visualize_common_indicators() (pys.data_collection.fundamental_data.fundamentalpipeline method)": [[3, "pys.data_collection.fundamental_data.FundamentalPipeline.visualize_common_indicators", false]], "visualize_composite_scores() (pys.porfolio_optimization.signal_generator.signalgenerator method)": [[6, "pys.porfolio_optimization.signal_generator.SignalGenerator.visualize_composite_scores", false]], "visualize_events() (pys.data_collection.news_processor.news_visualizer.newsvisualizer method)": [[4, "pys.data_collection.news_processor.news_visualizer.NewsVisualizer.visualize_events", false]], "visualize_kbd() (pys.data_collection.kbd_analyzer.kbdanalyzer method)": [[3, "pys.data_collection.kbd_analyzer.KBDAnalyzer.visualize_kbd", false]], "visualize_portfolio() (pys.porfolio_optimization.portfolio_optimizer.portfoliooptimizer method)": [[6, "pys.porfolio_optimization.portfolio_optimizer.PortfolioOptimizer.visualize_portfolio", false]], "visualize_results() (pys.porfolio_optimization.backtester.backtester method)": [[6, "pys.porfolio_optimization.backtester.Backtester.visualize_results", false]], "visualize_sentiment() (pys.data_collection.news_processor.news_visualizer.newsvisualizer method)": [[4, "pys.data_collection.news_processor.news_visualizer.NewsVisualizer.visualize_sentiment", false]], "visualize_signals() (pys.porfolio_optimization.signal_generator.signalgenerator method)": [[6, "pys.porfolio_optimization.signal_generator.SignalGenerator.visualize_signals", false]]}, "objects": {"": [[2, 0, 0, "-", "pys"]], "pys": [[3, 0, 0, "-", "data_collection"], [5, 0, 0, "-", "improved_pipeline"], [6, 0, 0, "-", "porfolio_optimization"], [7, 0, 0, "-", "utils"]], "pys.data_collection": [[3, 0, 0, "-", "bonds_kbd_pipeline"], [3, 0, 0, "-", "bonds_kbd_strategies"], [3, 0, 0, "-", "bonds_parser"], [3, 0, 0, "-", "bonds_processor"], [3, 0, 0, "-", "data_integration"], [3, 0, 0, "-", "fundamental_data"], [3, 0, 0, "-", "kbd"], [3, 0, 0, "-", "kbd_analyzer"], [3, 0, 0, "-", "market_cap"], [3, 0, 0, "-", "market_data"], [3, 0, 0, "-", "news_pipeline"], [4, 0, 0, "-", "news_processor"], [3, 0, 0, "-", "private_info"], [3, 0, 0, "-", "tech_analysis"], [3, 0, 0, "-", "technical_indicators"]], "pys.data_collection.bonds_kbd_pipeline": [[3, 1, 1, "", "create_combined_report"], [3, 1, 1, "", "run_bond_selection_with_kbd"]], "pys.data_collection.bonds_kbd_strategies": [[3, 2, 1, "", "BondStrategy"], [3, 2, 1, "", "KBDRateExpectationStrategy"]], "pys.data_collection.bonds_kbd_strategies.BondStrategy": [[3, 3, 1, "", "get_filter_params"], [3, 3, 1, "", "get_portfolio_params"], [3, 3, 1, "", "rank_bonds"]], "pys.data_collection.bonds_kbd_strategies.KBDRateExpectationStrategy": [[3, 3, 1, "", "get_filter_params"], [3, 3, 1, "", "get_portfolio_params"], [3, 3, 1, "", "rank_bonds"]], "pys.data_collection.bonds_parser": [[3, 2, 1, "", "MOEXBondHistoricalParser"], [3, 1, 1, "", "run_bond_pipeline"]], "pys.data_collection.bonds_parser.MOEXBondHistoricalParser": [[3, 4, 1, "", "API_DELAY"], [3, 4, 1, "", "BASE_DATA_DIR"], [3, 4, 1, "", "BOARD_GROUPS"], [3, 4, 1, "", "CACHE_DIR"], [3, 3, 1, "", "analyze_bonds_continuity"], [3, 3, 1, "", "analyze_continuity_from_consolidated"], [3, 3, 1, "", "clear_cache"], [3, 3, 1, "", "filter_existing_data"], [3, 3, 1, "", "find_optimal_threshold"], [3, 3, 1, "", "find_optimal_threshold_from_consolidated"], [3, 3, 1, "", "generate_complete_dataset"], [3, 3, 1, "", "generate_dataset_with_threshold"], [3, 3, 1, "", "get_available_bonds"], [3, 3, 1, "", "get_bonds_for_period"], [3, 3, 1, "", "get_latest_bonds"], [3, 3, 1, "", "parse_interval"]], "pys.data_collection.bonds_processor": [[3, 2, 1, "", "BondsProcessor"], [3, 1, 1, "", "run_pipeline_bonds_processor"]], "pys.data_collection.bonds_processor.BondsProcessor": [[3, 3, 1, "", "calculate_bond_metrics"], [3, 3, 1, "", "generate_portfolio_analysis"], [3, 3, 1, "", "get_bonds_for_portfolio"], [3, 3, 1, "", "load_and_process_all_bonds"], [3, 3, 1, "", "load_previous_recommendations"], [3, 3, 1, "", "process_direct_data"], [3, 3, 1, "", "visualize_bond_universe"]], "pys.data_collection.data_integration": [[3, 2, 1, "", "DataIntegrator"], [3, 1, 1, "", "run_pipeline_integration"]], "pys.data_collection.data_integration.DataIntegrator": [[3, 3, 1, "", "load_multiple_tickers"], [3, 3, 1, "", "load_ticker_data"], [3, 3, 1, "", "run_pipeline"]], "pys.data_collection.fundamental_data": [[3, 2, 1, "", "FundamentalPipeline"], [3, 2, 1, "", "SmartLabYearlyParser"], [3, 1, 1, "", "run_pipeline_fundamental"]], "pys.data_collection.fundamental_data.FundamentalPipeline": [[3, 3, 1, "", "analyze_common_indicators"], [3, 3, 1, "", "process_tickers"], [3, 3, 1, "", "save_data"], [3, 3, 1, "", "visualize_common_indicators"]], "pys.data_collection.fundamental_data.SmartLabYearlyParser": [[3, 3, 1, "", "clean_table"], [3, 3, 1, "", "fetch_page"], [3, 3, 1, "", "parse_yearly_tables"], [3, 3, 1, "", "preprocess_dataframe"], [3, 3, 1, "", "to_float"]], "pys.data_collection.kbd": [[3, 2, 1, "", "KBDDownloader"], [3, 1, 1, "", "run_pipeline_kbd_parser"]], "pys.data_collection.kbd.KBDDownloader": [[3, 3, 1, "", "get_kbd"]], "pys.data_collection.kbd_analyzer": [[3, 2, 1, "", "KBDAnalyzer"]], "pys.data_collection.kbd_analyzer.KBDAnalyzer": [[3, 3, 1, "", "get_bonds_recommendations"], [3, 3, 1, "", "get_comprehensive_recommendations"], [3, 3, 1, "", "get_latest_kbd_metrics"], [3, 3, 1, "", "get_optimal_weighting_strategy"], [3, 3, 1, "", "visualize_kbd"]], "pys.data_collection.market_cap": [[3, 2, 1, "", "MarketCapParser"], [3, 1, 1, "", "run_pipeline_market_cap"]], "pys.data_collection.market_cap.MarketCapParser": [[3, 3, 1, "", "run_pipeline_market_cap"]], "pys.data_collection.market_data": [[3, 2, 1, "", "DataStorage"], [3, 2, 1, "", "MarketDataManager"], [3, 2, 1, "", "MarketDataPipeline"], [3, 2, 1, "", "TimeframeConverter"], [3, 2, 1, "", "TinkoffDataDownloader"], [3, 1, 1, "", "run_pipeline_market"]], "pys.data_collection.market_data.DataStorage": [[3, 3, 1, "", "extract_raw_data"], [3, 3, 1, "", "get_missing_date_ranges"], [3, 3, 1, "", "get_ticker_processed_path"], [3, 3, 1, "", "get_ticker_raw_path"], [3, 3, 1, "", "load_processed_data"], [3, 3, 1, "", "load_raw_csv_files"], [3, 3, 1, "", "save_processed_data"], [3, 3, 1, "", "store_raw_data"]], "pys.data_collection.market_data.MarketDataManager": [[3, 3, 1, "", "get_data"], [3, 3, 1, "", "get_data_for_multiple_tickers"]], "pys.data_collection.market_data.MarketDataPipeline": [[3, 3, 1, "", "run"]], "pys.data_collection.market_data.TimeframeConverter": [[3, 3, 1, "", "resample_ohlcv"]], "pys.data_collection.market_data.TinkoffDataDownloader": [[3, 3, 1, "", "download_for_ticker"], [3, 3, 1, "", "get_correct_figi"], [3, 3, 1, "", "get_figi"], [3, 3, 1, "", "get_isin"], [3, 3, 1, "", "get_uid"], [3, 3, 1, "", "initialize_instruments"], [3, 3, 1, "", "is_figi_correct"]], "pys.data_collection.news_pipeline": [[3, 2, 1, "", "NewsPipeline"], [3, 1, 1, "", "main"], [3, 1, 1, "", "merge_with_existing"], [3, 1, 1, "", "save_events_data"], [3, 1, 1, "", "save_sentiment_data"], [3, 1, 1, "", "update_daily_sentiment"]], "pys.data_collection.news_pipeline.NewsPipeline": [[3, 3, 1, "", "run_pipeline"]], "pys.data_collection.news_processor": [[4, 0, 0, "-", "event_detector"], [4, 0, 0, "-", "keywords"], [4, 0, 0, "-", "news_feature_extractor"], [4, 0, 0, "-", "news_integration"], [4, 0, 0, "-", "news_preprocessor"], [4, 0, 0, "-", "news_visualizer"], [4, 0, 0, "-", "sentiment_analysis"]], "pys.data_collection.news_processor.event_detector": [[4, 2, 1, "", "EventDetector"]], "pys.data_collection.news_processor.event_detector.EventDetector": [[4, 3, 1, "", "assess_event_impact"], [4, 3, 1, "", "create_event_time_series"], [4, 3, 1, "", "detect_events"]], "pys.data_collection.news_processor.news_feature_extractor": [[4, 2, 1, "", "NewsFeatureExtractor"]], "pys.data_collection.news_processor.news_feature_extractor.NewsFeatureExtractor": [[4, 3, 1, "", "create_time_series_features"], [4, 3, 1, "", "create_topic_features"], [4, 3, 1, "", "extract_keyword_mentions"], [4, 3, 1, "", "extract_topics_lda"]], "pys.data_collection.news_processor.news_integration": [[4, 2, 1, "", "NewsIntegration"]], "pys.data_collection.news_processor.news_integration.NewsIntegration": [[4, 3, 1, "", "convert_news_to_views"], [4, 3, 1, "", "create_ml_features"], [4, 3, 1, "", "merge_news_with_price_data"]], "pys.data_collection.news_processor.news_preprocessor": [[4, 2, 1, "", "NewsPreprocessor"]], "pys.data_collection.news_processor.news_preprocessor.NewsPreprocessor": [[4, 3, 1, "", "clean_text"], [4, 3, 1, "", "process_all_tickers"], [4, 3, 1, "", "process_news_file"], [4, 3, 1, "", "process_ticker_news"]], "pys.data_collection.news_processor.news_visualizer": [[4, 2, 1, "", "NewsVisualizer"]], "pys.data_collection.news_processor.news_visualizer.NewsVisualizer": [[4, 3, 1, "", "create_news_dashboard"], [4, 3, 1, "", "plot_event_distribution"], [4, 3, 1, "", "plot_sentiment_by_event_type"], [4, 3, 1, "", "plot_sentiment_distribution"], [4, 3, 1, "", "plot_sentiment_time_series"], [4, 3, 1, "", "visualize_events"], [4, 3, 1, "", "visualize_sentiment"]], "pys.data_collection.news_processor.sentiment_analysis": [[4, 2, 1, "", "SentimentAnalyzer"]], "pys.data_collection.news_processor.sentiment_analysis.SentimentAnalyzer": [[4, 3, 1, "", "analyze_news_dataframe"], [4, 3, 1, "", "analyze_stock_impact"], [4, 3, 1, "", "analyze_text"], [4, 3, 1, "", "analyze_text_advanced_ru"], [4, 3, 1, "", "analyze_text_simple_ru"], [4, 3, 1, "", "analyze_text_vader"], [4, 3, 1, "", "analyze_ticker_news"], [4, 3, 1, "", "create_daily_sentiment_series"], [4, 3, 1, "", "set_cbr_meetings"]], "pys.data_collection.tech_analysis": [[3, 2, 1, "", "TechAnalysisPipeline"], [3, 1, 1, "", "run_pipeline_technical"]], "pys.data_collection.tech_analysis.TechAnalysisPipeline": [[3, 3, 1, "", "create_summary_report"], [3, 3, 1, "", "run_pipeline"]], "pys.data_collection.technical_indicators": [[3, 2, 1, "", "TechnicalIndicators"]], "pys.data_collection.technical_indicators.TechnicalIndicators": [[3, 3, 1, "", "calculate_indicators"], [3, 3, 1, "", "load_data"], [3, 3, 1, "", "plot_macd"], [3, 3, 1, "", "plot_price_with_indicators"]], "pys.improved_pipeline": [[5, 0, 0, "-", "grid_search"], [5, 0, 0, "-", "honest_backtest"], [5, 0, 0, "-", "short_selling_support"]], "pys.improved_pipeline.grid_search": [[5, 2, 1, "", "GridSearch"], [5, 1, 1, "", "run_grid_search_pipeline"]], "pys.improved_pipeline.grid_search.GridSearch": [[5, 3, 1, "", "run_grid_search"]], "pys.improved_pipeline.honest_backtest": [[5, 2, 1, "", "HonestBacktester"], [5, 1, 1, "", "run_honest_backtest"]], "pys.improved_pipeline.honest_backtest.HonestBacktester": [[5, 3, 1, "", "run"]], "pys.improved_pipeline.short_selling_support": [[5, 1, 1, "", "apply_short_selling_support"], [5, 1, 1, "", "modify_backtester_for_shorts"], [5, 1, 1, "", "modify_portfolio_optimizer_for_shorts"], [5, 1, 1, "", "modify_signal_generator_for_shorts"], [5, 1, 1, "", "run_short_selling_pipeline"]], "pys.porfolio_optimization": [[6, 0, 0, "-", "backtester"], [6, 0, 0, "-", "executor"], [6, 0, 0, "-", "portfolio_optimizer"], [6, 0, 0, "-", "signal_generator"]], "pys.porfolio_optimization.backtester": [[6, 2, 1, "", "Backtester"]], "pys.porfolio_optimization.backtester.Backtester": [[6, 3, 1, "", "calculate_bonds_returns"], [6, 3, 1, "", "calculate_performance_metrics"], [6, 3, 1, "", "calculate_portfolio_return"], [6, 3, 1, "", "calculate_returns"], [6, 3, 1, "", "calculate_returns_by_ticker"], [6, 3, 1, "", "load_bonds_data"], [6, 3, 1, "", "load_data"], [6, 3, 1, "", "run_pipeline"], [6, 3, 1, "", "visualize_results"]], "pys.porfolio_optimization.executor": [[6, 2, 1, "", "PipelineExecutor"]], "pys.porfolio_optimization.executor.PipelineExecutor": [[6, 3, 1, "", "build_production_portfolio"], [6, 3, 1, "", "copy_bond_portfolio"], [6, 3, 1, "", "create_combined_portfolio"], [6, 3, 1, "", "create_short_portfolio"], [6, 3, 1, "", "create_summary_report"], [6, 3, 1, "", "generate_signals"], [6, 3, 1, "", "optimize_standard_portfolio"], [6, 3, 1, "", "process_bond_pipeline"], [6, 3, 1, "", "run_pipeline"], [6, 3, 1, "", "select_best_portfolio"]], "pys.porfolio_optimization.portfolio_optimizer": [[6, 2, 1, "", "PortfolioOptimizer"], [6, 1, 1, "", "run_all_optimization_models"]], "pys.porfolio_optimization.portfolio_optimizer.PortfolioOptimizer": [[6, 3, 1, "", "calculate_final_portfolio"], [6, 3, 1, "", "calculate_implied_returns"], [6, 3, 1, "", "calculate_market_weights"], [6, 3, 1, "", "calculate_portfolio_performance"], [6, 3, 1, "", "generate_efficient_frontier"], [6, 3, 1, "", "incorporate_views"], [6, 3, 1, "", "load_data"], [6, 3, 1, "", "load_market_caps"], [6, 3, 1, "", "load_risk_free_portfolio"], [6, 3, 1, "", "negative_sharpe_ratio"], [6, 3, 1, "", "optimize_portfolio"], [6, 3, 1, "", "plot_efficient_frontier"], [6, 3, 1, "", "plot_enhanced_efficient_frontier"], [6, 3, 1, "", "prepare_returns"], [6, 3, 1, "", "prepare_returns_standard"], [6, 3, 1, "", "prepare_returns_with_shorts"], [6, 3, 1, "", "prepare_views_from_signals"], [6, 3, 1, "", "run_pipeline"], [6, 3, 1, "", "visualize_portfolio"]], "pys.porfolio_optimization.signal_generator": [[6, 2, 1, "", "SignalGenerator"], [6, 1, 1, "", "run_pipeline_signal_generator"]], "pys.porfolio_optimization.signal_generator.SignalGenerator": [[6, 3, 1, "", "calculate_composite_score"], [6, 3, 1, "", "calculate_indicator_score"], [6, 3, 1, "", "calculate_quantiles"], [6, 3, 1, "", "calculate_ticker_fundamental_score"], [6, 3, 1, "", "create_shortlist"], [6, 3, 1, "", "generate_signals"], [6, 3, 1, "", "load_data"], [6, 3, 1, "", "load_fundamental_data"], [6, 3, 1, "", "run_pipeline"], [6, 3, 1, "", "save_shortlist"], [6, 3, 1, "", "visualize_composite_scores"], [6, 3, 1, "", "visualize_signals"]], "pys.utils": [[7, 0, 0, "-", "logger"], [7, 0, 0, "-", "monkey_patch"], [7, 0, 0, "-", "path_helper"], [7, 0, 0, "-", "run_with_config"]], "pys.utils.logger": [[7, 2, 1, "", "BaseLogger"]], "pys.utils.logger.BaseLogger": [[7, 3, 1, "", "log_end_process"], [7, 3, 1, "", "log_exception"], [7, 3, 1, "", "log_start_process"], [7, 3, 1, "", "setup_logger"]], "pys.utils.monkey_patch": [[7, 1, 1, "", "apply_patch"], [7, 1, 1, "", "apply_patches"]], "pys.utils.path_helper": [[7, 1, 1, "", "add_project_root_to_path"], [7, 1, 1, "", "get_base_path"], [7, 1, 1, "", "get_project_root"], [7, 1, 1, "", "is_server"], [7, 1, 1, "", "setup_python_path"]], "pys.utils.run_with_config": [[7, 1, 1, "", "run_with_config"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute"}, "terms": {"": 3, "0": [3, 5, 6, 7], "01": [5, 6], "04": 5, "05": 6, "06": [5, 6], "075": [5, 6], "1": [3, 5, 6], "10": [4, 5], "100": 3, "1000": 6, "105": 3, "12": [5, 6], "14": [3, 4], "15": [5, 6], "15min": 3, "167": 3, "193": 3, "1d": [3, 4], "1h": 3, "1m": 3, "1min": 3, "1w": 3, "2": [3, 4, 6], "20": [3, 4, 6], "200": 3, "2000": 3, "2024": [3, 5, 6], "2025": [5, 6], "207": 3, "22": 3, "245": 3, "25": 6, "3": [3, 4, 6], "30": [3, 5, 6], "31": [5, 6], "35": 6, "360": 3, "4": [5, 6], "40": 5, "5": [3, 4, 6], "5000": 3, "58": 3, "5min": 3, "6": 3, "60000": 3, "7": [3, 4, 6], "77": 3, "9": 3, "90": 3, "99": [3, 6], "9test": [3, 5, 6, 7], "abc": 3, "abstract": 3, "across": [3, 7], "add": [0, 7], "add_project_root_to_path": [2, 7], "addit": 3, "adx_window": 4, "aeshef": [3, 5, 6, 7], "aggress": [3, 6], "all": [3, 6, 7], "all_year": 3, "analysi": [3, 4], "analyz": 3, "analyze_bonds_continu": [2, 3], "analyze_common_ind": [2, 3], "analyze_continu": 3, "analyze_continuity_from_consolid": [2, 3], "analyze_news_datafram": [3, 4], "analyze_stock_impact": [3, 4], "analyze_text": [3, 4], "analyze_text_advanced_ru": [3, 4], "analyze_text_simple_ru": [3, 4], "analyze_text_vad": [3, 4], "analyze_ticker_new": [3, 4], "analyzed_df": 4, "api": 3, "api_delai": [2, 3], "applic": 7, "apply_patch": [2, 7], "apply_short_selling_support": [2, 5], "assess_event_impact": [3, 4], "atr_window": 4, "avail": 3, "backtest": [0, 2, 5], "backtest_param": 6, "backtester_class": 5, "balanc": 3, "base": [3, 4, 5, 6, 7], "base_data_dir": [2, 3], "base_dir": [3, 4, 7], "base_directori": 3, "base_path": [3, 6, 7], "baselogg": [2, 3, 5, 6, 7], "bb_window": 4, "best_params_fil": [5, 6], "black": 6, "black_litterman": 6, "board_group": [2, 3], "bond": [3, 6], "bond_portfolio_20250426": 6, "bond_result": [3, 6], "bond_stat": 3, "bond_volume_threshold": 3, "bonds_csv": 3, "bonds_data_dir": 6, "bonds_df": 3, "bonds_dir": 3, "bonds_kbd_pipelin": [0, 2], "bonds_kbd_strategi": [0, 2], "bonds_pars": [0, 2], "bonds_processor": [0, 2], "bondsprocessor": [2, 3], "bondstrategi": [2, 3], "bool": [3, 4, 5, 6], "bound": 6, "build_production_portfolio": [2, 6], "cache_dir": [2, 3], "cache_ttl_dai": 3, "calcul": 3, "calculate_bond_metr": [2, 3], "calculate_bonds_return": [2, 6], "calculate_composite_scor": [2, 6], "calculate_final_portfolio": [2, 6], "calculate_implied_return": [2, 6], "calculate_ind": [2, 3], "calculate_indicator_scor": [2, 6], "calculate_market_weight": [2, 6], "calculate_performance_metr": [2, 6], "calculate_portfolio_perform": [2, 6], "calculate_portfolio_return": [2, 6], "calculate_quantil": [2, 6], "calculate_return": [2, 6], "calculate_returns_by_tick": [2, 6], "calculate_ticker_fundamental_scor": [2, 6], "cap": 6, "capm": 6, "cbrstock": 3, "cci_20": 6, "cci_window": 4, "chart_siz": 6, "chunk_siz": 5, "class": [3, 4, 5, 6, 7], "class_or_funct": 7, "clean_tabl": [2, 3], "clean_text": [3, 4], "cleanup_old_fil": 3, "clear_cach": [2, 3], "clear_previous_load": 3, "close": [3, 4, 6], "cml": 6, "collect_telegram": 3, "color_schem": 6, "combin": 6, "combined_df": 4, "combined_portfolio_param": 6, "combined_senti": 3, "common": 3, "common_indicators_by_year": 3, "compon": 7, "comprehens": 3, "confid": 4, "config": 7, "config_filenam": 7, "configur": 7, "conserv": [3, 6], "consist": 7, "consolid": 3, "constrain": 6, "continu": 3, "continuity_threshold": 3, "continuous_bond": 3, "convert_news_to_view": [3, 4], "copy_bond_portfolio": [2, 6], "count": 4, "coupon_typ": 3, "creat": 3, "create_combined_portfolio": [2, 6], "create_combined_report": [2, 3], "create_daily_sentiment_seri": [3, 4], "create_event_time_seri": [3, 4], "create_ml_featur": [3, 4], "create_news_dashboard": [3, 4], "create_short_portfolio": [2, 6], "create_shortlist": [2, 6], "create_summary_report": [2, 3, 6], "create_time_series_featur": [3, 4], "create_topic_featur": [3, 4], "criteria": 3, "csv": [3, 5, 6], "csv_file": 3, "daily_ev": 4, "daily_senti": 4, "daily_sentiment_df": 4, "data": [3, 5, 6, 7], "data_collect": [0, 2], "data_fil": [5, 6], "data_integr": [0, 2], "datafram": [3, 4, 5, 6], "dataintegr": [2, 3], "dataset": 3, "dataset_path": 3, "datastorag": [2, 3], "date": [3, 4], "date_column": 4, "date_rang": 3, "datetim": 3, "days_old": 3, "dd": [3, 6], "default": 3, "desktop": [3, 5, 6, 7], "detail": [0, 3], "detect_ev": [3, 4], "df": [3, 4, 5, 6], "dict": [3, 4, 5, 6], "direct_data_fil": 3, "document": 6, "document_top": 4, "download_for_tick": [2, 3], "dpi": 6, "duration_rang": 3, "each": 3, "ema": 3, "ema_window": 4, "emit": 3, "emoji": 4, "enabl": 7, "end": 7, "end_dat": [3, 5, 6], "english": 4, "etc": 6, "event_detector": [2, 3], "eventdetector": [3, 4], "events_fil": 3, "except": 7, "excluded_bond": 3, "excluded_issu": [3, 6], "executor": [0, 2], "expected_return": 4, "extract_keyword_ment": [3, 4], "extract_raw_data": [2, 3], "extract_topics_lda": [3, 4], "fals": [3, 4, 6], "fetch": 3, "fetch_pag": [2, 3], "figi": 3, "figi_list": 3, "figur": 4, "file": 3, "file_path": [3, 4], "filter": 3, "filter_continu": 3, "filter_existing_data": [2, 3], "filter_param": 3, "final_portfolio": 6, "financi": 4, "find": 3, "find_optimal_threshold": [2, 3], "find_optimal_threshold_from_consolid": [2, 3], "float": [3, 4, 5, 6], "for3": [3, 5, 6, 7], "force_download": 3, "force_portfolio_typ": 6, "force_repars": 3, "format": 7, "from": 3, "frontier_data": 6, "fund_data": 6, "fund_weight": 6, "fundamental_data": [0, 2], "fundamentalpipelin": [2, 3], "gazp": 3, "gener": 3, "generate_complete_dataset": [2, 3], "generate_dataset_with_threshold": [2, 3], "generate_efficient_fronti": [2, 6], "generate_portfolio_analysi": [2, 3], "generate_sign": [2, 6], "get": 3, "get_available_bond": [2, 3], "get_base_path": [2, 7], "get_bonds_for_period": [2, 3], "get_bonds_for_portfolio": [2, 3], "get_bonds_recommend": [2, 3], "get_comprehensive_recommend": [2, 3], "get_correct_figi": [2, 3], "get_data": [2, 3], "get_data_for_multiple_tick": [2, 3], "get_figi": [2, 3], "get_filter_param": [2, 3], "get_isin": [2, 3], "get_kbd": [2, 3], "get_latest_bond": [2, 3], "get_latest_kbd_metr": [2, 3], "get_missing_date_rang": [2, 3], "get_optimal_weighting_strategi": [2, 3], "get_portfolio_param": [2, 3], "get_project_root": [2, 7], "get_ticker_processed_path": [2, 3], "get_ticker_raw_path": [2, 3], "get_uid": [2, 3], "ggplot": 6, "github": 6, "go": 4, "grid": [5, 6], "grid_search": [0, 2], "grid_search_result": 5, "gridsearch": [2, 5], "high": 3, "honest_backtest": [0, 2], "honestbacktest": [2, 5, 6], "html": 6, "identifi": 3, "import": 7, "improved_pipelin": [0, 2], "include_chart": 6, "include_metr": 6, "include_non_trading_dai": 3, "include_onli": 3, "include_short_sel": 6, "include_weight": 6, "included_issu": 3, "inclus": 3, "incorporate_view": [2, 6], "index": 0, "indic": [3, 6], "initialize_instru": [2, 3], "input_fil": 6, "int": [3, 4, 5, 6, 7], "inverse_dur": 3, "is_figi_correct": [2, 3], "is_qualified_investor": 3, "is_serv": [2, 7], "isin": 3, "issue_year_rang": 3, "json": 7, "k": 6, "kbd": [0, 2, 6], "kbd_analyz": [0, 2], "kbd_data": [3, 6], "kbd_duration_flex": [3, 6], "kbd_result": 3, "kbd_yield_adjust": [3, 6], "kbdanalyz": [2, 3], "kbddownload": [2, 3], "kbdrateexpectationstrategi": [2, 3], "keyword": [2, 3], "known_coupon_pay": 3, "kursach": [3, 5, 6, 7], "kwarg": 7, "languag": 4, "latest_kbd": 3, "lda": 4, "lda_model": 4, "list": [3, 4, 5, 6], "litterman": 6, "load": 3, "load_all_csv": 3, "load_and_process_all_bond": [2, 3], "load_bonds_data": [2, 6], "load_data": [2, 3, 6], "load_fundamental_data": [2, 6], "load_market_cap": [2, 6], "load_multiple_tick": [2, 3], "load_previous_recommend": [2, 3], "load_processed_data": [2, 3], "load_raw_csv_fil": [2, 3], "load_risk_free_portfolio": [2, 6], "load_ticker_data": [2, 3], "log": 7, "log_end_process": [2, 7], "log_except": [2, 7], "log_level": [5, 6], "log_start_process": [2, 7], "logger": 2, "logger_nam": 7, "long_ratio": 6, "low": 3, "macd": 3, "macd_diff": 6, "main": [2, 3], "market_cap": [0, 2, 6], "market_data": [0, 2], "market_return": 4, "marketcappars": [2, 3], "marketdatamanag": [2, 3], "marketdatapipelin": [2, 3], "markowitz": 6, "matplotlib": 4, "max": 3, "max_adjustment_iter": [3, 6], "max_dur": 3, "max_expiration_d": 3, "max_history_dai": 3, "max_rf_alloc": 6, "max_threshold": [3, 6], "max_weight": 6, "max_work": 3, "max_yield": 3, "md": 6, "median": 3, "medium": 3, "meeting_d": 4, "merge_news_with_price_data": [3, 4], "merge_with_exist": [2, 3], "messag": 7, "meta": 7, "method": [3, 7], "metric": 3, "metrics_prior": 6, "min": 3, "min_bond": [3, 6], "min_dur": 3, "min_liquid": 3, "min_position_weight": 6, "min_rf_alloc": 6, "min_sharp": 6, "min_yield": 3, "ml": 4, "mm": [3, 6], "moder": 6, "modify_backtester_for_short": [2, 5], "modify_portfolio_optimizer_for_short": [2, 5], "modify_signal_generator_for_short": [2, 5], "modul": 0, "moex": 3, "moex_cach": 3, "moexbondhistoricalpars": [2, 3], "monkey_patch": 2, "n_bond": [3, 6], "n_job": 5, "n_top_word": 4, "n_topic": 4, "name": [3, 6], "nan_fill_method": 3, "needed_prc_per_year": 3, "negative_sharpe_ratio": [2, 6], "new": 4, "new_data": 3, "new_df": 3, "news_df": [3, 4], "news_feature_extractor": [2, 3], "news_features_df": 4, "news_integr": [2, 3], "news_pipelin": [0, 2], "news_preprocessor": [2, 3], "news_processor": [2, 3], "news_visu": [2, 3], "news_with_ev": 4, "news_with_senti": 4, "newsfeatureextractor": [3, 4], "newsintegr": [3, 4], "newspipelin": [2, 3], "newspreprocessor": [3, 4], "newsvisu": [3, 4], "no_data": 6, "none": [3, 4, 5, 6, 7], "num_portfolio": 6, "object": [3, 4, 5, 7], "ohlcv": 3, "open": 3, "optim": [3, 6], "optimization_param": 6, "optimize_portfolio": [2, 6], "optimize_standard_portfolio": [2, 6], "option": [3, 5, 6], "output_dir": [3, 4, 5, 6], "output_fil": 6, "output_format": [3, 6], "output_path": 3, "overall_df": 3, "override_param": [3, 6], "override_risk_profil": 6, "packag": 0, "page": 0, "panda": [3, 6], "param": 3, "param_nam": 5, "paramet": [3, 4, 7], "parquet": 3, "pars": 3, "parse_interv": [2, 3], "parse_yearly_t": [2, 3], "path": [3, 7], "path_help": 2, "pd": [3, 4], "pdf": 6, "period": 5, "period_data": 3, "pipelin": 3, "pipelineexecutor": [2, 6], "plot_efficient_fronti": [2, 6], "plot_enhanced_efficient_fronti": [2, 6], "plot_event_distribut": [3, 4], "plot_macd": [2, 3], "plot_price_with_ind": [2, 3], "plot_sentiment_by_event_typ": [3, 4], "plot_sentiment_distribut": [3, 4], "plot_sentiment_time_seri": [3, 4], "plot_styl": 6, "plotli": 4, "plt": 4, "png": 6, "porfolio_optim": [0, 2], "portfolio": [3, 6], "portfolio_control": 6, "portfolio_optim": [0, 2], "portfolio_optimizer_class": 5, "portfolio_param": 5, "portfolio_st": [3, 6], "portfolio_weight": 6, "portfoliooptim": [2, 5, 6], "prediction_horizon": 4, "prefer_standard": 6, "prepare_return": [2, 6], "prepare_returns_standard": [2, 6], "prepare_returns_with_short": [2, 6], "prepare_views_from_sign": [2, 6], "preprocess_datafram": [2, 3], "previou": 3, "price_col": 6, "price_df": 4, "price_rang": 3, "private_info": [0, 2], "process": [3, 7], "process_all_tick": [3, 4], "process_bond_pipelin": [2, 6], "process_direct_data": [2, 3], "process_nam": 7, "process_news_fil": [3, 4], "process_tick": [2, 3], "process_ticker_new": [3, 4], "processed_data": [3, 6], "project": 7, "provid": 7, "py": 0, "python": 7, "quantil": 6, "r_14": 6, "rank_bond": [2, 3], "recommend": 3, "report_format": 6, "report_param": 6, "reports_dir": 3, "resample_ohlcv": [2, 3], "resample_rul": [3, 4], "resili": 3, "restart": 3, "restructuredtext": 0, "result": [3, 6], "results_dir": 3, "return": [3, 4, 7], "rf_alloc": 6, "risk_avers": 4, "risk_free_portfolio_fil": 6, "risk_free_r": [5, 6], "risk_toler": 3, "roc_10": 6, "root": 7, "rsi": 3, "rsi_14": 6, "rsi_window": [3, 4], "run": [2, 3, 5], "run_all_optimization_model": [2, 6], "run_bond_pipelin": [2, 3], "run_bond_selection_with_kbd": [2, 3, 6], "run_combined_portfolio": 6, "run_grid_search": [2, 5], "run_grid_search_pipelin": [2, 5], "run_honest_backtest": [2, 5], "run_id": 3, "run_pipelin": [2, 3, 6], "run_pipeline_bonds_processor": [2, 3], "run_pipeline_fundament": [2, 3], "run_pipeline_integr": [2, 3], "run_pipeline_kbd_pars": [2, 3], "run_pipeline_market": [2, 3], "run_pipeline_market_cap": [2, 3], "run_pipeline_signal_gener": [2, 6], "run_pipeline_techn": [2, 3], "run_short_portfolio": 6, "run_short_selling_pipelin": [2, 5], "run_standard_portfolio": 6, "run_with_config": 2, "russian": 4, "save": [3, 4], "save_data": [2, 3], "save_events_data": [2, 3], "save_format": 6, "save_path": [3, 4], "save_processed_data": [2, 3], "save_sentiment_data": [2, 3], "save_shortlist": [2, 6], "save_ticker_visu": 6, "save_to_csv": 3, "save_to_ticker_dir": 6, "sber": 3, "score_weight": 3, "script_path": 7, "seaborn": 6, "search": [0, 5, 6], "see": 0, "select_best_portfolio": [2, 6], "select_portfolio_param": 6, "sentiment": 4, "sentiment_analysi": [2, 3], "sentiment_analyz": 3, "sentiment_column": 4, "sentiment_compound": 4, "sentiment_compound_median": 6, "sentiment_direct": 6, "sentiment_fil": 3, "sentiment_ind": 6, "sentiment_ma_7d": 6, "sentiment_ratio": 6, "sentiment_t": 4, "sentiment_zscore_7d": 6, "sentimentanalyz": [3, 4], "set": 7, "set_cbr_meet": [3, 4], "setup": 7, "setup_logg": [2, 7], "setup_python_path": [2, 7], "sharp": 6, "short": 6, "short_portfolio_param": 6, "short_selling_result": 5, "short_selling_support": [0, 2], "shortlist": 6, "signal": 6, "signal_gener": [0, 2], "signal_generator_class": 5, "signal_param": [5, 6], "signal_visu": 6, "signalgener": [2, 5, 6], "signals_col": 6, "sma": 3, "sma_window": [3, 4], "smartlabyearlypars": [2, 3], "soup": 3, "standard": [6, 7], "standard_portfolio_param": 6, "start": 7, "start_dat": [3, 5, 6], "static": 3, "stoch_": 6, "stoch_window": 4, "storag": 3, "store_raw_data": [2, 3], "str": [3, 4, 5, 6, 7], "strategy_profil": [3, 6], "submodul": [0, 2], "subpackag": 0, "success": 7, "svg": 6, "sy": 7, "syntax": 0, "target_column": 4, "tau": 6, "tech_analysi": [0, 2], "tech_ind": 6, "techanalysispipelin": [2, 3], "technical_ind": [0, 2], "technicalind": [2, 3], "telegram_api_hash": 3, "telegram_api_id": 3, "telegram_channel": 3, "telegram_limit": 3, "test_period": [5, 6], "text": 4, "text_column": 4, "threshold": 3, "threshold_bui": 6, "threshold_sel": 6, "ticker": [3, 4, 6], "ticker_list": 3, "tickers_list": 6, "timefram": 3, "timeframeconvert": [2, 3], "timestamp": 3, "tinkoff": 3, "tinkoffdatadownload": [2, 3], "to_float": [2, 3], "token": 3, "top": 3, "top_pct": 6, "topic_keyword": 4, "traceback": 7, "train_period": [5, 6], "training_period": 5, "true": [3, 4, 5, 6, 7], "tupl": [3, 4, 5, 6], "type": [3, 4, 5, 6], "uid": 3, "unique_column": 3, "univers": 3, "up": 7, "update_daily_senti": [2, 3], "update_data": 3, "update_kbd_data": [3, 6], "us": 0, "use_cach": 3, "use_cached_telegram": 3, "use_existing_data": 3, "use_grid_search_param": [5, 6], "use_kbd_recommend": [3, 6], "use_latest_snapshot_onli": 3, "use_nltk": 4, "use_plotli": 4, "use_vad": 4, "user": [3, 5, 6, 7], "util": 2, "valu": [5, 6], "vector": 4, "verbos": 3, "verify_with_honest_backtest": 6, "view": 6, "view_confid": 6, "visual": 3, "visualization_param": 6, "visualize_bond_univers": [2, 3], "visualize_common_ind": [2, 3], "visualize_composite_scor": [2, 6], "visualize_ev": [3, 4], "visualize_kbd": [2, 3], "visualize_portfolio": [2, 6], "visualize_result": [2, 6], "visualize_senti": [3, 4], "visualize_sign": [2, 6], "volatil": 6, "volum": 3, "volume_threshold": 3, "weight": 6, "weight_fundament": 6, "weight_senti": 6, "weight_tech": 6, "weighting_strategi": [3, 6], "whether": 3, "williams_": 6, "window_s": 4, "x": 3, "year": [3, 6], "yield_rang": 3, "your": 0, "yyyi": [3, 6], "zero": 3, "zip": 3, "\u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u044b\u0439": 3, "\u0430\u0432\u0442\u043e\u0432\u044b\u0431\u043e\u0440\u0430": 3, "\u0430\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u0435\u0439": 4, "\u0430\u0433\u0440\u0435\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439": 3, "\u0430\u0433\u0440\u0435\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u043c": 3, "\u0430\u0433\u0440\u0435\u0433\u0438\u0440\u0443\u0435\u0442": 3, "\u0430\u0434\u0430\u043f\u0442\u0430\u0446\u0438\u0438": 3, "\u0430\u0434\u0430\u043f\u0442\u0438\u0432\u043d\u043e\u0439": 3, "\u0430\u043a\u0442\u0438\u0432\u0430": [3, 6], "\u0430\u043a\u0442\u0438\u0432\u043e\u0432": 6, "\u0430\u043a\u0442\u0443\u0430\u043b\u044c\u043d\u044b\u0435": 3, "\u0430\u043a\u0446\u0438\u0439": 6, "\u0430\u043d\u0430\u043b\u0438\u0437": 3, "\u0430\u043d\u0430\u043b\u0438\u0437\u0430": [3, 4, 6], "\u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u0442": 3, "\u0431\u0430\u0437\u043e\u0432\u0430\u044f": 7, "\u0431\u0430\u0437\u043e\u0432\u044b\u0439": [3, 6], "\u0431\u0435\u0437": 3, "\u0431\u0435\u0437\u0440\u0438\u0441\u043a\u043e\u0432\u0430\u044f": [5, 6], "\u0431\u0435\u0437\u0440\u0438\u0441\u043a\u043e\u0432\u043e\u0439": 6, "\u0431\u0435\u0437\u0440\u0438\u0441\u043a\u043e\u0432\u0443\u044e": 6, "\u0431\u0435\u0437\u0440\u0438\u0441\u043a\u043e\u0432\u044b\u0445": [5, 6], "\u0431\u0435\u0441\u043a\u0443\u043f\u043e\u043d\u043d\u043e\u0439": 3, "\u0431\u0438\u0440\u0436\u0438": 3, "\u0431\u043b\u0435\u043a\u0430": 4, "\u0431\u043b\u044d\u043a\u0430": 6, "\u0431\u043e\u043b\u043b\u0438\u043d\u0434\u0436\u0435\u0440\u0430": 3, "\u0431\u0443\u0434\u0443\u0442": [4, 6], "\u0431\u0443\u0434\u0443\u0449\u0438\u0439": 5, "\u0431\u0443\u043c\u0430\u0433\u0438": 6, "\u0431\u044b\u0442\u044c": 3, "\u0431\u044d\u043a\u0442\u0435\u0441\u0442": 5, "\u0431\u044d\u043a\u0442\u0435\u0441\u0442\u0430": [5, 6], "\u0431\u044d\u043a\u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f": 6, "\u0431\u044d\u043a\u0442\u0435\u0441\u0442\u043e\u043c": 6, "\u0432": [3, 4, 5, 6, 7], "\u0432\u0435\u0441": 6, "\u0432\u0435\u0441\u0430": 6, "\u0432\u0435\u0441\u0430\u043c\u0438": 6, "\u0432\u0435\u0441\u043e\u0432": 3, "\u0432\u0437\u0432\u0435\u0448\u0438\u0432\u0430\u043d\u0438\u044f": 3, "\u0432\u0438\u0434\u0435": [3, 6], "\u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438": [3, 4, 6], "\u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0439": 6, "\u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e": 6, "\u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f": 4, "\u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c": 3, "\u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u0442": 6, "\u0432\u043a\u043b\u044e\u0447\u0430\u0435\u043c\u044b\u0445": 3, "\u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442": 6, "\u0432\u043a\u043b\u044e\u0447\u0430\u0442\u044c": [3, 6], "\u0432\u043a\u043b\u044e\u0447\u0430\u044f": [3, 6], "\u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f": [3, 6], "\u0432\u043b\u0438\u044f\u043d\u0438\u044f": 4, "\u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0445": 3, "\u0432\u043e\u0437\u0432\u0440\u0430\u0442\u0430": 7, "\u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442": [3, 7], "\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c\u044e": 3, "\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0433\u043e": 4, "\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439": 3, "\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c": [3, 4], "\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445": [3, 4], "\u0432\u0441\u0435": [3, 4, 6, 7], "\u0432\u0441\u0435\u043c": 5, "\u0432\u0441\u0435\u0445": [3, 4, 6], "\u0432\u044b\u0431\u0438\u0440\u0430\u0435\u0442": 6, "\u0432\u044b\u0431\u0438\u0440\u0430\u044e\u0442\u0441\u044f": 3, "\u0432\u044b\u0431\u043e\u0440": 6, "\u0432\u044b\u0431\u043e\u0440\u0430": [3, 6], "\u0432\u044b\u0431\u043e\u0440\u043a\u0435": 6, "\u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u043c": 6, "\u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0439": 6, "\u0432\u044b\u0431\u0440\u0430\u0442\u044c": 6, "\u0432\u044b\u0434\u0435\u043b\u0435\u043d\u0438\u0435\u043c": 6, "\u0432\u044b\u0437\u043e\u0432\u0430": 7, "\u0432\u044b\u043f\u043b\u0430\u0442": 3, "\u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435": 7, "\u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f": [3, 6], "\u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442": 6, "\u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f": 7, "\u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c": 3, "\u0432\u044b\u043f\u0443\u0441\u043a\u0430": 3, "\u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0435": 3, "\u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445": 3, "\u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438": 6, "\u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044e": 6, "\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442": [3, 6], "\u0433\u043e\u0434": [3, 6], "\u0433\u043e\u0434\u043e\u0432": 3, "\u0433\u043e\u0440\u0438\u0437\u043e\u043d\u0442": 4, "\u0433\u0440\u0430\u043d\u0438\u0446\u0435": 6, "\u0433\u0440\u0430\u043d\u0438\u0446\u0443": 6, "\u0433\u0440\u0430\u043d\u0438\u0446\u044b": 6, "\u0433\u0440\u0430\u0444\u0438\u043a": [3, 4], "\u0433\u0440\u0430\u0444\u0438\u043a\u0430": 4, "\u0433\u0440\u0430\u0444\u0438\u043a\u0438": 6, "\u0433\u0440\u0430\u0444\u0438\u043a\u043e\u0432": [4, 6], "\u0434": 3, "\u0434\u0430\u0436\u0435": 3, "\u0434\u0430\u043d\u043d\u043e\u0433\u043e": 3, "\u0434\u0430\u043d\u043d\u044b\u0435": [3, 6], "\u0434\u0430\u043d\u043d\u044b\u043c": 3, "\u0434\u0430\u043d\u043d\u044b\u043c\u0438": [3, 4, 5, 6], "\u0434\u0430\u043d\u043d\u044b\u0445": [3, 4, 6], "\u0434\u0430\u0442": 6, "\u0434\u0430\u0442\u0430": 3, "\u0434\u0430\u0442\u0430\u043c\u0438": 3, "\u0434\u0430\u0442\u0430\u0441\u0435\u0442": 3, "\u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430": 3, "\u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0435": 3, "\u0434\u0430\u0442\u0430\u0441\u0435\u0442\u043e\u043c": 3, "\u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0443": 3, "\u0434\u0430\u0442\u043e\u0439": 4, "\u0434\u0430\u0442\u0443": 3, "\u0434\u0430\u0442\u044b": 6, "\u0434\u0430\u0448\u0431\u043e\u0440\u0434": 4, "\u0434\u0430\u0448\u0431\u043e\u0440\u0434\u0430": 4, "\u0434\u0435\u043d\u044c": 3, "\u0434\u0435\u0442\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e": 6, "\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b": 6, "\u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d": [3, 6], "\u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430": 3, "\u0434\u0438\u0432\u0435\u0440\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438": [3, 6], "\u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438": [4, 6], "\u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e": 6, "\u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f": [3, 4, 5, 6, 7], "\u0434\u043b\u0438\u043d\u043d\u044b\u0435": 6, "\u0434\u043b\u0438\u043d\u043d\u044b\u043c\u0438": 6, "\u0434\u043b\u0438\u043d\u043d\u044b\u0445": 6, "\u0434\u043b\u044f": [3, 4, 5, 6, 7], "\u0434\u043d\u0435\u0432\u043d\u043e\u0433\u043e": 3, "\u0434\u043d\u0435\u0432\u043d\u044b\u043c": 3, "\u0434\u043d\u0435\u0432\u043d\u044b\u043c\u0438": 3, "\u0434\u043d\u0435\u0439": 3, "\u0434\u043d\u0438": 3, "\u0434\u043d\u044f\u0445": 4, "\u0434\u043e": [3, 6], "\u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043d\u043e\u0439": 4, "\u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u043c": 3, "\u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u043c\u0438": [3, 4, 6], "\u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442": 7, "\u0434\u043e\u043b\u0436\u043d\u043e": 3, "\u0434\u043e\u043b\u044f": 6, "\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439": 6, "\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b": 3, "\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435": 3, "\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445": 3, "\u0434\u043e\u0445\u043e\u0434\u043d\u043e\u0441\u0442\u0435\u0439": 6, "\u0434\u043e\u0445\u043e\u0434\u043d\u043e\u0441\u0442\u0438": [3, 6], "\u0434\u043e\u0445\u043e\u0434\u043d\u043e\u0441\u0442\u044c": [3, 6], "\u0434\u043e\u0445\u043e\u0434\u043d\u043e\u0441\u0442\u044f\u043c\u0438": 4, "\u0434\u0440\u0443\u0433\u043e\u0439": 3, "\u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u044b": 3, "\u0434\u044e\u0439\u043c\u0430\u0445": 6, "\u0434\u044e\u0440\u0430\u0446\u0438\u0438": 3, "\u0434\u044e\u0440\u0430\u0446\u0438\u044f": 3, "\u0435\u0434\u0438\u043d\u044b\u0439": 3, "\u0435\u0436\u0435\u0434\u043d\u0435\u0432\u043d\u043e\u0439": 4, "\u0435\u0436\u0435\u0434\u043d\u0435\u0432\u043d\u044b\u043c": 3, "\u0435\u0436\u0435\u0434\u043d\u0435\u0432\u043d\u044b\u043c\u0438": 4, "\u0435\u0436\u0435\u0434\u043d\u0435\u0432\u043d\u044b\u0445": 4, "\u0435\u0441\u043b\u0438": [3, 4, 6], "\u0435\u0441\u0442\u044c": 3, "\u0437\u0430": [3, 6], "\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438": [6, 7], "\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430": 4, "\u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442": [3, 6], "\u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0442\u044c": 3, "\u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u0435": [3, 6], "\u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c": 3, "\u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0430": 6, "\u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438": 3, "\u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c": 3, "\u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c": 5, "\u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c\u0438": 6, "\u0437\u0430\u043a\u0440\u044b\u0442\u0438\u044f": 4, "\u0437\u0430\u043f\u0438\u0441\u0438": 3, "\u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u044e\u0442\u0441\u044f": 3, "\u0437\u0430\u043f\u0443\u0441\u043a": 3, "\u0437\u0430\u043f\u0443\u0441\u043a\u0430": [3, 6, 7], "\u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442": [3, 5, 6], "\u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c": 6, "\u0437\u0430\u043f\u0443\u0441\u043a\u0435": 6, "\u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c": 7, "\u0437\u0430\u0442\u0435\u043c": 3, "\u0438": [3, 4, 5, 6, 7], "\u0438\u0433\u043d\u043e\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c": 6, "\u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440": 3, "\u0438\u0437": [3, 4, 5, 6], "\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u044b\u0445": 3, "\u0438\u0437\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u0435": 4, "\u0438\u0437\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f": 4, "\u0438\u043b\u0438": [3, 4, 6, 7], "\u0438\u043c\u0435\u0435\u0442": 3, "\u0438\u043c\u0435\u044e\u0442\u0441\u044f": 3, "\u0438\u043c\u0435\u044e\u0449\u0438\u043c\u0438": 3, "\u0438\u043c\u044f": 7, "\u0438\u043d\u0430\u0447\u0435": 4, "\u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u043e\u043d\u043d\u043e\u0433\u043e": 6, "\u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u043e\u043d\u043d\u043e\u0439": 6, "\u0438\u043d\u0432\u0435\u0441\u0442\u043e\u0440\u0430": 3, "\u0438\u043d\u0432\u0435\u0441\u0442\u043e\u0440\u043e\u0432": 4, "\u0438\u043d\u0434\u0435\u043a\u0441": 3, "\u0438\u043d\u0434\u0438\u043a\u0430\u0442\u043e\u0440\u043e\u0432": 3, "\u0438\u043d\u0434\u0438\u043a\u0430\u0442\u043e\u0440\u044b": 3, "\u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u0430": 3, "\u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u043e\u0432": 3, "\u0438\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u0438": 4, "\u0438\u043d\u0442\u0435\u0433\u0440\u0438\u0440\u0443\u0435\u0442": 3, "\u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b": 3, "\u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u0430": 3, "\u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u043e\u0432": 3, "\u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u043e\u043c": 3, "\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439": 3, "\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f": 6, "\u0438\u0441\u043a\u043b\u044e\u0447\u0430\u0435\u043c\u044b\u0445": [3, 6], "\u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f": 3, "\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c": 3, "\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f": 3, "\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c": [3, 4, 5, 6], "\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f": [3, 6], "\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f": 5, "\u0438\u0441\u0442\u043e\u0440\u0438\u0447\u0435\u0441\u043a\u0438\u043c\u0438": [3, 4, 6], "\u0438\u0441\u0442\u043e\u0440\u0438\u0447\u0435\u0441\u043a\u0438\u0445": [3, 6], "\u0438\u0441\u0445\u043e\u0434\u043d\u044b\u0439": 4, "\u0438\u0442\u0435\u0440\u0430\u0446\u0438\u0439": 3, "\u0438\u0442\u043e\u0433\u043e\u0432\u044b\u0439": 6, "\u0438\u0445": 3, "\u043a": [3, 4, 5, 6, 7], "\u043a\u0430\u0436\u0434\u043e\u0433\u043e": [4, 6], "\u043a\u0430\u0436\u0434\u043e\u0439": 4, "\u043a\u0430\u043a\u0438\u0435": 3, "\u043a\u0430\u043f\u0438\u0442\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0435\u0439": 3, "\u043a\u0430\u043f\u0438\u0442\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438": [3, 6], "\u043a\u0430\u043f\u0438\u0442\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0439": 3, "\u043a\u0430\u0441\u0430\u043d\u0438\u044f": 6, "\u043a\u0430\u0442\u0430\u043b\u043e\u0433": 7, "\u043a\u0431\u0434": [3, 6], "\u043a\u0432\u0430\u043b\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f": 3, "\u043a\u0432\u0430\u043d\u0442\u0438\u043b\u0438": 6, "\u043a\u043b\u0430\u0441\u0441": [3, 4, 5, 6], "\u043a\u043b\u0430\u0441\u0441\u0430": 7, "\u043a\u043b\u0430\u0441\u0441\u0430\u043c": 5, "\u043a\u043b\u0430\u0441\u0441\u043e\u0432": 7, "\u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0433\u043e": 4, "\u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0445": 4, "\u043a\u043e": 5, "\u043a\u043e\u0434": 7, "\u043a\u043e\u0434\u043e\u0432": 3, "\u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430": 3, "\u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e": [3, 4, 5, 6], "\u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c": 4, "\u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438": 4, "\u043a\u043e\u043b\u043e\u043d\u043a\u0430\u043c\u0438": 4, "\u043a\u043e\u043b\u043e\u043d\u043a\u0438": [3, 4], "\u043a\u043e\u043b\u043e\u043d\u043a\u043e\u0439": 3, "\u043a\u043e\u043b\u043e\u043d\u043a\u0443": 3, "\u043a\u043e\u043b\u043e\u043d\u043e\u043a": 3, "\u043a\u043e\u043c\u0430\u043d\u0434\u043d\u043e\u0439": 3, "\u043a\u043e\u043c\u0431\u0438\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e": 6, "\u043a\u043e\u043c\u0431\u0438\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439": [3, 6], "\u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438": 4, "\u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0439": 3, "\u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u043d\u0430\u044f": 6, "\u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u043d\u044b\u0435": 3, "\u043a\u043e\u043c\u043f\u043e\u0437\u0438\u0442\u043d\u043e\u0433\u043e": 6, "\u043a\u043e\u043c\u043f\u043e\u0437\u0438\u0442\u043d\u043e\u043c\u0443": 6, "\u043a\u043e\u043c\u043f\u043e\u0437\u0438\u0442\u043d\u044b\u0439": 6, "\u043a\u043e\u043c\u043f\u043e\u0437\u0438\u0442\u043d\u044b\u0445": 6, "\u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f": 4, "\u043a\u043e\u043d\u0435\u0446": [3, 5, 6], "\u043a\u043e\u043d\u0435\u0447\u043d\u0430\u044f": 3, "\u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e": 4, "\u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044c": 6, "\u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044c\u043d\u044b\u0445": 5, "\u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438": 7, "\u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0433\u043e": 7, "\u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0439": 7, "\u043a\u043e\u043d\u0446\u0430": 6, "\u043a\u043e\u043f\u0438\u0440\u0443\u0435\u0442": 6, "\u043a\u043e\u0440\u043d\u0435\u0432\u043e\u0439": 7, "\u043a\u043e\u0440\u043e\u0442\u043a\u0438\u0435": 6, "\u043a\u043e\u0440\u043e\u0442\u043a\u0438\u043c\u0438": 6, "\u043a\u043e\u0440\u043e\u0442\u043a\u0438\u0445": [5, 6], "\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u043a\u0430": [3, 6], "\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0433\u043e": 3, "\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0441\u0442\u0438": 3, "\u043a\u043e\u0440\u0442\u0435\u0436": 3, "\u043a\u043e\u0440\u0442\u0435\u0436\u0435\u0439": 3, "\u043a\u043e\u0442\u043e\u0440\u043e\u0435": 3, "\u043a\u043e\u0442\u043e\u0440\u0443\u044e": 3, "\u043a\u043e\u0442\u043e\u0440\u044b\u0435": 7, "\u043a\u043e\u0442\u043e\u0440\u044b\u0439": 7, "\u043a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442": [3, 4, 6], "\u043a\u0440\u0438\u0432\u043e\u0439": 3, "\u043a\u0440\u0443\u0433\u043e\u0432\u043e\u0439": 6, "\u043a\u0443\u043f\u043e\u043d\u0430": 3, "\u043a\u0443\u043f\u043e\u043d\u043d\u044b\u0445": 3, "\u043a\u044d\u0448": 3, "\u043b\u0435\u0442": 3, "\u043b\u0438": [3, 4, 5, 6, 7], "\u043b\u0438\u0431\u043e": 3, "\u043b\u0438\u043d\u0438\u044f": 3, "\u043b\u0438\u0442\u0435\u0440\u043c\u0430\u043d\u0430": [4, 6], "\u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435": 3, "\u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u0439": 7, "\u043b\u043e\u043d\u0433": 6, "\u043b\u0443\u0447\u0448\u0435\u0433\u043e": 6, "\u043b\u0443\u0447\u0448\u0435\u043c": 6, "\u043b\u0443\u0447\u0448\u0438\u0439": 6, "\u043b\u0443\u0447\u0448\u0438\u043c\u0438": [5, 6], "\u043b\u0443\u0447\u0448\u0438\u0445": 6, "\u043b\u044e\u0431\u044b\u0435": 7, "\u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f": [3, 6], "\u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435": 3, "\u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439": [3, 6], "\u043c\u0430\u043a\u0441\u0438\u043c\u0438\u0437\u0438\u0440\u0443\u044f": 6, "\u043c\u0430\u0441\u0448\u0442\u0430\u0431\u0430": 3, "\u043c\u0435\u0436\u0434\u0443": 7, "\u043c\u0435\u0441\u044f\u0446\u044b": 3, "\u043c\u0435\u0442\u043e\u0434": 6, "\u043c\u0435\u0442\u043e\u0434\u0430": 7, "\u043c\u0435\u0442\u0440\u0438\u043a": 6, "\u043c\u0435\u0442\u0440\u0438\u043a\u0430\u043c\u0438": 3, "\u043c\u0435\u0442\u0440\u0438\u043a\u0438": [3, 6], "\u043c\u0438\u043b\u043b\u0438\u0441\u0435\u043a\u0443\u043d\u0434\u0430\u0445": 3, "\u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f": [3, 6], "\u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435": [3, 6], "\u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439": 3, "\u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439": [3, 6], "\u043c\u0438\u043d\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u0438": 6, "\u043c\u0438\u043d\u0443\u0442\u043d\u044b\u0435": 3, "\u043c\u0438\u043d\u0443\u0442\u043d\u044b\u043c\u0438": 3, "\u043c\u043d\u0435\u043d\u0438\u044f": 4, "\u043c\u043d\u0435\u043d\u0438\u044f\u043c\u0438": 4, "\u043c\u043d\u043e\u0433\u043e\u043f\u043e\u0442\u043e\u0447\u043d\u043e\u0441\u0442\u0438": 3, "\u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e": 6, "\u043c\u043d\u043e\u0436\u0438\u0442\u0435\u043b\u044c": 3, "\u043c\u043e\u0434\u0435\u043b\u0435\u0439": [4, 6], "\u043c\u043e\u0434\u0435\u043b\u0438": [4, 6], "\u043c\u043e\u0434\u0435\u043b\u044c": 6, "\u043c\u043e\u0434\u0435\u043b\u044f\u043c\u0438": 4, "\u043c\u043e\u0434\u0438\u0444\u0438\u0446\u0438\u0440\u0443\u0435\u0442": 5, "\u043c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439": 3, "\u043d\u0430": [3, 4, 5, 6, 7], "\u043d\u0430\u0437\u0430\u0434": 3, "\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435": 4, "\u043d\u0430\u0439\u0434\u0435\u043d\u044b": 3, "\u043d\u0430\u043b\u0438\u0447\u0438\u0435": 3, "\u043d\u0430\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u043c\u0438": 3, "\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440": 3, "\u043d\u0430\u043f\u0440\u044f\u043c\u0443\u044e": 3, "\u043d\u0430\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0435\u0442": 3, "\u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0439": 4, "\u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u044f": 4, "\u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u044f\u043c\u0438": 4, "\u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u044f\u0445": 4, "\u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438": 3, "\u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u043e\u0439": 6, "\u043d\u0430\u0445\u043e\u0434\u0438\u0442": [3, 6], "\u043d\u0430\u0447\u0430\u043b\u0430": [3, 6], "\u043d\u0430\u0447\u0430\u043b\u043e": [3, 5, 6], "\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f": 3, "\u043d\u0435": 3, "\u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435": 7, "\u043d\u0435\u043f\u0440\u0435\u0440\u044b\u0432\u043d\u043e\u0441\u0442\u0438": 3, "\u043d\u0435\u043f\u0440\u0435\u0440\u044b\u0432\u043d\u043e\u0441\u0442\u044c": 3, "\u043d\u0435\u043f\u0440\u0435\u0440\u044b\u0432\u043d\u044b\u043c\u0438": 3, "\u043d\u0435\u043f\u0440\u0438\u044f\u0442\u0438\u044f": 4, "\u043d\u0435\u0440\u0430\u0431\u043e\u0447\u0438\u0435": 3, "\u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445": 3, "\u043d\u0435\u0442": 3, "\u043d\u0435\u0443\u0432\u0435\u0440\u0435\u043d\u043d\u043e\u0441\u0442\u0438": 6, "\u043d\u0438\u0445": 6, "\u043d\u043e\u0432\u043e\u0441\u0442\u0435\u0439": [3, 4], "\u043d\u043e\u0432\u043e\u0441\u0442\u0438": 4, "\u043d\u043e\u0432\u043e\u0441\u0442\u043d\u044b\u043c\u0438": 4, "\u043d\u043e\u0432\u043e\u0441\u0442\u043d\u044b\u0445": 4, "\u043d\u043e\u0432\u043e\u0441\u0442\u044f\u043c\u0438": 4, "\u043d\u043e\u0432\u043e\u0441\u0442\u044f\u0445": 4, "\u043d\u043e\u0432\u044b\u0435": 3, "\u043d\u043e\u0432\u044b\u043c\u0438": 3, "\u043d\u043e\u0432\u044b\u0445": 3, "\u043d\u0443\u0436\u043d\u043e": [3, 7], "\u043e": [4, 6], "\u043e\u0431": 3, "\u043e\u0431\u0435\u0438\u0445": 6, "\u043e\u0431\u043b\u0438\u0433\u0430\u0446\u0438\u0438": [3, 6], "\u043e\u0431\u043b\u0438\u0433\u0430\u0446\u0438\u0439": [3, 6], "\u043e\u0431\u043b\u0438\u0433\u0430\u0446\u0438\u044f\u043c": [3, 6], "\u043e\u0431\u043b\u0438\u0433\u0430\u0446\u0438\u044f\u043c\u0438": 3, "\u043e\u0431\u043b\u0438\u0433\u0430\u0446\u0438\u044f\u0445": 3, "\u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u0438\u0435": 4, "\u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u0438\u044f": 4, "\u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u043c\u0438": 4, "\u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0438\u0432\u0430\u0435\u0442": 3, "\u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f": 6, "\u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442": 3, "\u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0442\u044c": 3, "\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u044b\u0435": 3, "\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u044b\u043c\u0438": [3, 4], "\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u044b\u0445": 3, "\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u044b": 4, "\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430": [3, 4], "\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438": [3, 5, 6], "\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u043e\u0439": 6, "\u043e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u044f": 3, "\u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f": [5, 6], "\u043e\u0431\u0449\u0438\u0439": 6, "\u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435": 4, "\u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435\u043c": 3, "\u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f": 3, "\u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u043d\u043e\u0433\u043e": 3, "\u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u043d\u044b\u0439": [3, 4], "\u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u043d\u044b\u0445": 4, "\u043e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u043c": 3, "\u043e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u0442": 3, "\u043e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u044e\u0442\u0441\u044f": 3, "\u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0451\u043d\u043d\u044b\u0439": 3, "\u043e\u0431\u044a\u0435\u043a\u0442": 4, "\u043e\u0431\u044a\u0435\u043a\u0442\u0430\u043c\u0438": 4, "\u043e\u0431\u044a\u0435\u043c": 3, "\u043e\u0431\u044b\u0447\u043d\u043e": 4, "\u043e\u0434\u0438\u043d": 3, "\u043e\u0434\u043d\u043e\u0433\u043e": [3, 4, 6], "\u043e\u0434\u043d\u043e\u0439": 6, "\u043e\u0436\u0438\u0434\u0430\u0435\u0442\u0441\u044f": 3, "\u043e\u0436\u0438\u0434\u0430\u043d\u0438\u0439": 3, "\u043e\u043a\u043d\u0443": 3, "\u043e\u043a\u043e\u043d": 4, "\u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f": 3, "\u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f": 7, "\u043e\u043d\u0438": 3, "\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f": 3, "\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439": 6, "\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c": 3, "\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c\u044b\u043c": 3, "\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442": 7, "\u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0433\u043e": 3, "\u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e": 3, "\u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439": 3, "\u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u043c": 6, "\u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u043c\u0438": 6, "\u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0445": [3, 5, 6], "\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u0438": 6, "\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044e": 6, "\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0438\u0440\u0443\u0435\u0442": 6, "\u043e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e": 7, "\u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0443\u0435\u0442": 6, "\u043e\u0441\u043d\u043e\u0432\u0435": [3, 4, 6], "\u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439": 3, "\u043e\u0442": [4, 6, 7], "\u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e": 6, "\u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0433\u043e": 6, "\u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0439": 6, "\u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435": 3, "\u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439": 3, "\u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439": 6, "\u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0442": 3, "\u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445": 3, "\u043e\u0442\u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435": 3, "\u043e\u0442\u0447\u0435\u0442": [3, 6], "\u043e\u0442\u0447\u0435\u0442\u0430": [3, 6], "\u043e\u0442\u0447\u0435\u0442\u0443": [3, 6], "\u043e\u0446\u0435\u043d\u0438\u0432\u0430\u0435\u0442": 3, "\u043e\u0446\u0435\u043d\u043a\u0430": 4, "\u043e\u0446\u0435\u043d\u043a\u043e\u0439": 4, "\u043e\u0447\u0438\u0441\u0442\u0438\u0442\u044c": 3, "\u043e\u0447\u0438\u0441\u0442\u043a\u0430": 4, "\u043e\u0447\u0438\u0441\u0442\u043a\u0438": 4, "\u043e\u0447\u0438\u0449\u0435\u043d\u043d\u044b\u0439": 4, "\u043e\u0448\u0438\u0431\u043a\u0438": 3, "\u043f\u0430\u0439\u043f\u043b\u0430\u0439\u043d": [3, 6], "\u043f\u0430\u0439\u043f\u043b\u0430\u0439\u043d\u0430": [3, 4, 5, 6], "\u043f\u0430\u043f\u043a\u0435": 3, "\u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u044c\u043d\u044b\u0445": 5, "\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440": 6, "\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c": 5, "\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438": [5, 6, 7], "\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432": [3, 5, 6], "\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b": [3, 5, 6, 7], "\u043f\u0430\u0440\u043a\u0435\u0442": 3, "\u043f\u0430\u0440\u0441\u0435\u0440": 3, "\u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0430": [3, 6], "\u043f\u0430\u0440\u0441\u0438\u0442\u044c": 3, "\u043f\u0430\u0442\u0447\u0438": 7, "\u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c": 7, "\u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u043c": 3, "\u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439": 4, "\u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f": 3, "\u043f\u0435\u0440\u0438\u043e\u0434": [3, 5, 6], "\u043f\u0435\u0440\u0438\u043e\u0434\u0430": 3, "\u043f\u0435\u0440\u0438\u043e\u0434\u0435": 3, "\u043f\u0435\u0440\u0438\u043e\u0434\u043e\u0432": [3, 5], "\u043f\u0435\u0440\u0438\u043e\u0434\u044b": [3, 6], "\u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0438\u0439": 3, "\u043f\u043e": [3, 4, 5, 6], "\u043f\u043e\u0433\u0430\u0448\u0435\u043d\u0438\u044f": 3, "\u043f\u043e\u0434\u0433\u043e\u0442\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442": 6, "\u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430": 6, "\u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0438": 6, "\u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438": 5, "\u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u043e\u0439": [5, 6], "\u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0443": [5, 6], "\u043f\u043e\u0437\u0438\u0446\u0438\u0438": 6, "\u043f\u043e\u0437\u0438\u0446\u0438\u0439": [5, 6], "\u043f\u043e\u0437\u0438\u0446\u0438\u044f\u043c\u0438": 6, "\u043f\u043e\u0438\u0441\u043a\u0430": [4, 5], "\u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f": 6, "\u043f\u043e\u043a\u0443\u043f\u043a\u0438": 6, "\u043f\u043e\u043b\u043d\u043e\u0433\u043e": 3, "\u043f\u043e\u043b\u043d\u043e\u0435_\u043f\u0435\u0440\u0435\u0441\u0435\u0447\u0435\u043d\u0438\u0435": 3, "\u043f\u043e\u043b\u043d\u043e\u0439": 6, "\u043f\u043e\u043b\u043d\u044b\u0435": 3, "\u043f\u043e\u043b\u043d\u044b\u0439": [3, 6], "\u043f\u043e\u043b\u043d\u044b\u043c\u0438": 3, "\u043f\u043e\u043b\u043e\u0441\u0430\u043c\u0438": 3, "\u043f\u043e\u043b\u043e\u0441\u044b": 3, "\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435": 3, "\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f": 3, "\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435": 3, "\u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c": 3, "\u043f\u043e\u043c\u043e\u0449\u044c\u044e": [3, 4, 6], "\u043f\u043e\u0440\u043e\u0433": [3, 6], "\u043f\u043e\u0440\u0442\u0444\u0435\u043b\u0435": [3, 6], "\u043f\u043e\u0440\u0442\u0444\u0435\u043b\u0435\u0439": 6, "\u043f\u043e\u0440\u0442\u0444\u0435\u043b\u0435\u043c": 6, "\u043f\u043e\u0440\u0442\u0444\u0435\u043b\u044c": [3, 6], "\u043f\u043e\u0440\u0442\u0444\u0435\u043b\u044e": 6, "\u043f\u043e\u0440\u0442\u0444\u0435\u043b\u044f": [3, 6], "\u043f\u043e\u0440\u0442\u0444\u0435\u043b\u044f\u0445": 6, "\u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0435": 3, "\u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439": 3, "\u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e": 6, "\u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u044f": 6, "\u043f\u043e\u0442\u043e\u043a\u043e\u0432": 3, "\u043f\u0440\u0430\u0437\u0434\u043d\u0438\u043a\u0438": 3, "\u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e": [3, 6], "\u043f\u0440\u0435\u0434\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438": 4, "\u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0438\u0442\u0430\u0442\u044c": 6, "\u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438": 3, "\u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0435": 3, "\u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f": 3, "\u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u043c\u0438": 3, "\u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u044c": 3, "\u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442": 3, "\u043f\u0440\u0438": 6, "\u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438": 4, "\u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432": 4, "\u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435\u043c": 3, "\u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f": 3, "\u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u0442": [5, 7], "\u043f\u0440\u0438\u043d\u0443\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e": [3, 6], "\u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442": [3, 6], "\u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f": 5, "\u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430": 3, "\u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438": 6, "\u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442": 7, "\u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c": 6, "\u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0430\u0445": 6, "\u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f": 4, "\u043f\u0440\u043e\u0433\u043d\u043e\u0437\u044b": 6, "\u043f\u0440\u043e\u0434\u0430\u0436\u0438": 6, "\u043f\u0440\u043e\u0435\u043a\u0442\u0430": [3, 6, 7], "\u043f\u0440\u043e\u0435\u043a\u0442\u0443": 3, "\u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442": 3, "\u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043e\u0447\u043d\u044b\u0445": 5, "\u043f\u0440\u043e\u0444\u0438\u043b\u044c": [3, 6], "\u043f\u0440\u043e\u0446\u0435\u043d\u0442": 6, "\u043f\u0440\u043e\u0446\u0435\u043d\u0442\u0430\u0445": 3, "\u043f\u0440\u043e\u0446\u0435\u043d\u0442\u043d\u044b\u0435": 3, "\u043f\u0440\u043e\u0446\u0435\u043d\u0442\u043d\u044b\u043c": 3, "\u043f\u0440\u043e\u0446\u0435\u0441\u0441": 3, "\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430": 7, "\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0432": 5, "\u043f\u0440\u043e\u0447\u0438\u0445": 6, "\u043f\u0443\u043d\u043a\u0442\u044b": 3, "\u043f\u0443\u0441\u0442\u043e\u0439": 3, "\u043f\u0443\u0442\u0435\u043c": 3, "\u043f\u0443\u0442\u0438": 3, "\u043f\u0443\u0442\u044c": [3, 4, 5, 6, 7], "\u0440\u0430\u0431\u043e\u0442\u044b": 3, "\u0440\u0430\u0432\u043d\u043e\u0432\u0435\u0441\u043d\u044b\u0435": 6, "\u0440\u0430\u0432\u043d\u044b\u0445": 6, "\u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445": [3, 6], "\u0440\u0430\u0437\u043c\u0435\u0440": [5, 6], "\u0440\u0430\u0437\u043c\u0435\u0440\u043e\u0432": 4, "\u0440\u0430\u0437\u043d\u0438\u0446\u0430": 3, "\u0440\u0430\u0437\u043d\u044b\u0445": 6, "\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u043e\u0439": 7, "\u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0435": 6, "\u0440\u0430\u043d\u0433\u0430": 3, "\u0440\u0430\u043d\u0436\u0438\u0440\u043e\u0432\u0430\u0442\u044c": 3, "\u0440\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u0430\u0442\u044c": 3, "\u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f": 4, "\u0440\u0430\u0441\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442": [3, 6], "\u0440\u0430\u0441\u0447\u0435\u0442\u0430": [3, 6], "\u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f": 3, "\u0440\u0435\u0430\u043b\u044c\u043d\u044b\u0435": 6, "\u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442": [3, 4], "\u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430": 3, "\u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u043c": 3, "\u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u043c\u0438": [4, 5, 6], "\u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432": [3, 5, 6], "\u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b": [3, 6], "\u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0438": 3, "\u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0439": 3, "\u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u043c\u0430\u044f": 3, "\u0440\u0438\u0441\u043a": 6, "\u0440\u0438\u0441\u043a\u0430": [4, 6], "\u0440\u0438\u0441\u043a\u0443": 3, "\u0440\u044b\u043d\u043e\u0447\u043d\u043e\u0439": [3, 6], "\u0440\u044b\u043d\u043e\u0447\u043d\u044b\u0435": 6, "\u0440\u044b\u043d\u043e\u0447\u043d\u044b\u043c\u0438": 3, "\u0440\u044b\u043d\u043e\u0447\u043d\u044b\u0445": 3, "\u0440\u044f\u0434\u0430": 4, "\u0440\u044f\u0434\u043e\u0432": 4, "\u0440\u044f\u0434\u043e\u043c": 4, "\u0441": [3, 4, 5, 6, 7], "\u0441\u0431\u043e\u0440\u0430": 3, "\u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u044b": 6, "\u0441\u0434\u0435\u043b\u043e\u043a": 3, "\u0441\u0435\u043d\u0442\u0438\u043c\u0435\u043d\u0442": [3, 6], "\u0441\u0435\u043d\u0442\u0438\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445": 3, "\u0441\u0435\u043d\u0442\u0438\u043c\u0435\u043d\u0442\u043e\u043c": 3, "\u0441\u0435\u0440\u0432\u0435\u0440\u0430": 3, "\u0441\u0435\u0440\u0432\u0435\u0440\u0435": 7, "\u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c": 7, "\u0441\u0438\u0433\u043d\u0430\u043b\u0430": 6, "\u0441\u0438\u0433\u043d\u0430\u043b\u0430\u043c\u0438": 6, "\u0441\u0438\u0433\u043d\u0430\u043b\u043e\u0432": [4, 6], "\u0441\u0438\u0433\u043d\u0430\u043b\u044b": 6, "\u0441\u0438\u0433\u043d\u0430\u043b\u044c\u043d\u0430\u044f": 3, "\u0441\u0438\u043b\u044b": 3, "\u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432": 4, "\u0441\u043a\u0430\u0447\u0430\u0442\u044c": 3, "\u0441\u043a\u0430\u0447\u0438\u0432\u0430\u043d\u0438\u044f": 3, "\u0441\u043a\u043e\u043b\u044c\u0437\u044f\u0449\u0430\u044f": 3, "\u0441\u043a\u043e\u043b\u044c\u0437\u044f\u0449\u0438\u043c\u0438": 3, "\u0441\u043a\u043e\u043b\u044c\u0437\u044f\u0449\u0438\u0445": 4, "\u0441\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u043c\u0443": 6, "\u0441\u043a\u043e\u0440": 6, "\u0441\u043a\u043e\u0440\u0430": [3, 6], "\u0441\u043a\u043e\u0440\u0430\u043c\u0438": 6, "\u0441\u043a\u043e\u0440\u043e\u0432": 6, "\u0441\u043a\u043e\u0440\u0443": 6, "\u0441\u043a\u0440\u0438\u043f\u0442": 7, "\u0441\u043a\u0440\u0438\u043f\u0442\u0430": 7, "\u0441\u043a\u0440\u0438\u043f\u0442\u0443": 7, "\u0441\u043b\u043e\u0432": 4, "\u0441\u043b\u043e\u0432\u0430": 4, "\u0441\u043b\u043e\u0432\u0430\u0440\u0435\u0439": 3, "\u0441\u043b\u043e\u0432\u0430\u0440\u044c": [3, 4, 5, 6], "\u0441\u043b\u0443\u0447\u0430\u0435": 3, "\u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0445": 6, "\u0441\u043c": 3, "\u0441\u043d\u0430\u043f\u0448\u043e\u0442": 3, "\u0441\u043e\u0431\u044b\u0442\u0438\u0439": 4, "\u0441\u043e\u0431\u044b\u0442\u0438\u044f": [3, 4], "\u0441\u043e\u0431\u044b\u0442\u0438\u044f\u043c\u0438": 4, "\u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u0438": 7, "\u0441\u043e\u0432\u043e\u043a\u0443\u043f\u043d\u044b\u0439": 3, "\u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439": 3, "\u0441\u043e\u0437\u0434\u0430\u0435\u0442": [3, 6], "\u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435": [4, 6], "\u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f": [3, 6], "\u0441\u043e\u0437\u0434\u0430\u043d\u043d\u043e\u043c\u0443": [3, 6], "\u0441\u043e\u0437\u0434\u0430\u0442\u044c": 3, "\u0441\u043e\u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u0435": 6, "\u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435\u043c": 6, "\u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f": [3, 4, 5, 6, 7], "\u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u043d\u043e\u043c\u0443": 3, "\u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u043d\u044b\u043c": 3, "\u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c": 3, "\u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442": [3, 6], "\u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c": [3, 4, 6], "\u0441\u043e\u0445\u0440\u0430\u043d\u044f\u044e\u0442\u0441\u044f": [3, 6], "\u0441\u043e\u0445\u0440\u0430\u043d\u0451\u043d\u043d\u043e\u043c\u0443": 3, "\u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0445": 4, "\u0441\u043f\u0438\u0441\u043a\u0430": 3, "\u0441\u043f\u0438\u0441\u043a\u0430\u043c\u0438": 3, "\u0441\u043f\u0438\u0441\u043e\u043a": [3, 4, 5, 6], "\u0441\u0440\u0435\u0434\u043d\u0438\u043c\u0438": 3, "\u0441\u0440\u0435\u0434\u043d\u044f\u044f": 3, "\u0441\u0441\u044b\u043b\u043e\u043a": 4, "\u0441\u0442\u0430\u0431\u0438\u043b\u044c\u043d\u043e\u0441\u0442\u0438": 3, "\u0441\u0442\u0430\u0431\u0438\u043b\u044c\u043d\u043e\u0441\u0442\u044c": 3, "\u0441\u0442\u0430\u0432\u043a\u0430": [5, 6], "\u0441\u0442\u0430\u0432\u043a\u0430\u043c": 3, "\u0441\u0442\u0430\u0432\u043e\u043a": 5, "\u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0433\u043e": 6, "\u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0435": 3, "\u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0439": 6, "\u0441\u0442\u0430\u0440\u0448\u0435": 3, "\u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a": 4, "\u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430_\u043f\u043e_\u043e\u0431\u043b\u0438\u0433\u0430\u0446\u0438\u044f\u043c": 3, "\u0441\u0442\u0438\u043b\u044c": 6, "\u0441\u0442\u043e\u043b\u0431\u0435\u0446": 3, "\u0441\u0442\u043e\u043b\u0431\u0446\u0430\u043c\u0438": 3, "\u0441\u0442\u043e\u043b\u0431\u0446\u043e\u043c": 3, "\u0441\u0442\u043e\u043b\u0431\u0446\u044b": 3, "\u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0438": [3, 6], "\u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0439": 3, "\u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e": 3, "\u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044e": [3, 6], "\u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044f": 3, "\u0441\u0442\u0440\u043e\u0438\u0442": 3, "\u0441\u0442\u0440\u043e\u043a\u0438": 3, "\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u043c": [3, 6], "\u0441\u0443\u0431\u044a\u0435\u043a\u0442\u0438\u0432\u043d\u044b\u0435": 6, "\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442": 3, "\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435": 3, "\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439": 3, "\u0441\u0445\u0435\u043c\u0430": 6, "\u0441\u044b\u0440\u044b\u0435": 3, "\u0441\u044b\u0440\u044b\u0445": 3, "\u0442": 3, "\u0442\u0435\u043a\u0441\u0442": 4, "\u0442\u0435\u043a\u0441\u0442\u0430": 4, "\u0442\u0435\u043a\u0441\u0442\u043e\u0432": 4, "\u0442\u0435\u043a\u0441\u0442\u043e\u043c": 4, "\u0442\u0435\u043a\u0443\u0449\u0430\u044f": 3, "\u0442\u0435\u043a\u0443\u0449\u0438\u0439": 3, "\u0442\u0435\u043a\u0443\u0449\u0443\u044e": 3, "\u0442\u0435\u043c": 4, "\u0442\u0435\u043c\u044b": 4, "\u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f": [5, 6], "\u0442\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u0435": 3, "\u0442\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u0445": 6, "\u0442\u0438\u043a\u0435\u0440": [3, 4], "\u0442\u0438\u043a\u0435\u0440\u0430": [3, 4, 6], "\u0442\u0438\u043a\u0435\u0440\u0430\u043c": 6, "\u0442\u0438\u043a\u0435\u0440\u0430\u043c\u0438": 3, "\u0442\u0438\u043a\u0435\u0440\u043e\u0432": [3, 4, 6], "\u0442\u0438\u043a\u0435\u0440\u044b": 4, "\u0442\u0438\u043f": [3, 6], "\u0442\u0438\u043f\u0430": 4, "\u0442\u0438\u043f\u0430\u043c": 4, "\u0442\u0438\u043f\u043e\u0432": [4, 6], "\u0442\u043e": 6, "\u0442\u043e\u043a\u0435\u043d": 3, "\u0442\u043e\u043b\u0435\u0440\u0430\u043d\u0442\u043d\u043e\u0441\u0442\u0438": 3, "\u0442\u043e\u043b\u044c\u043a\u043e": [3, 6], "\u0442\u043e\u043f\u043e\u0432\u044b\u0445": 6, "\u0442\u043e\u0440\u0433\u043e\u0432": 3, "\u0442\u043e\u0440\u0433\u043e\u0432\u044b\u0435": 6, "\u0442\u043e\u0440\u0433\u043e\u0432\u044b\u0439": 3, "\u0442\u043e\u0447\u0435\u043a": 5, "\u0442\u043e\u0447\u043a\u0438": 6, "\u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f": 3, "\u0443\u0432\u0435\u0440\u0435\u043d\u043d\u043e\u0441\u0442\u044c": 6, "\u0443\u0434\u0430\u043b\u0438\u0442\u044c": 3, "\u0443\u0434\u0430\u043b\u044f\u0435\u043c": 3, "\u0443\u0434\u0430\u043b\u044f\u0435\u0442": 3, "\u0443\u0436\u0435": 3, "\u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e": 3, "\u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0443\u044e": 3, "\u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439": 3, "\u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c": 3, "\u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0445": 4, "\u0443\u043b\u0443\u0447\u0448\u0435\u043d\u043d\u0443\u044e": 6, "\u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e": [3, 6], "\u0443\u043d\u0438\u0432\u0435\u0440\u0441\u0430\u043b\u044c\u043d\u0430\u044f": 7, "\u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445": 3, "\u0443\u043f\u043e\u043c\u0438\u043d\u0430\u043d\u0438\u0439": 4, "\u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f": 3, "\u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0435": 7, "\u0443\u0447\u0435\u0442\u043e\u043c": [3, 6], "\u0443\u0447\u0438\u0442\u044b\u0432\u0430\u044f": 6, "\u0444\u0430\u0439\u043b": [3, 4, 6, 7], "\u0444\u0430\u0439\u043b\u0430": [3, 4, 7], "\u0444\u0430\u0439\u043b\u0430\u043c": 3, "\u0444\u0430\u0439\u043b\u0435": 3, "\u0444\u0430\u0439\u043b\u043e\u0432": [3, 4], "\u0444\u0430\u0439\u043b\u0443": [3, 4, 5, 6], "\u0444\u0430\u0439\u043b\u044b": 3, "\u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e": 3, "\u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439": 3, "\u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u0438": [3, 6], "\u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432": 3, "\u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u0430\u0442\u044c": 3, "\u0444\u0438\u043d\u0430\u043b\u044c\u043d\u044b\u0435": 6, "\u0444\u043b\u0430\u0433": 6, "\u0444\u043b\u0430\u0433\u0430": 6, "\u0444\u043e\u0440\u043c\u0430\u0442": [3, 6], "\u0444\u043e\u0440\u043c\u0430\u0442\u0435": [3, 5, 6], "\u0444\u043e\u0440\u043c\u0430\u0442\u044b": 6, "\u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f": 3, "\u0444\u043e\u0440\u043c\u044b": 3, "\u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043b\u044c\u043d\u043e\u0433\u043e": 6, "\u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043b\u044c\u043d\u044b\u0435": 6, "\u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043b\u044c\u043d\u044b\u0439": 6, "\u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043b\u044c\u043d\u044b\u0445": 6, "\u0444\u0443\u043d\u043a\u0446\u0438\u0438": 7, "\u0444\u0443\u043d\u043a\u0446\u0438\u044f": [6, 7], "\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435\u043c": 3, "\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f": 3, "\u0446\u0432\u0435\u0442\u043e\u0432\u0430\u044f": 6, "\u0446\u0435\u043b\u0435\u0432\u043e\u0435": 3, "\u0446\u0435\u043b\u0435\u0432\u043e\u0439": [3, 4], "\u0446\u0435\u043d\u0430": 4, "\u0446\u0435\u043d\u0430\u043c\u0438": 4, "\u0446\u0435\u043d\u043e\u0432\u044b\u043c\u0438": 4, "\u0446\u0435\u043d\u044b": 3, "\u0446\u0438\u043a\u043b": 6, "\u0447\u0430\u043d\u043a\u0430": 5, "\u0447\u0430\u043d\u043a\u0438\u043d\u0433\u0430": 5, "\u0447\u0430\u0441\u0442\u0438": 6, "\u0447\u0430\u0441\u0442\u044c": 6, "\u0447\u0435\u0440\u0435\u0437": [3, 7], "\u0447\u0435\u0441\u0442\u043d\u043e\u0433\u043e": 5, "\u0447\u0435\u0441\u0442\u043d\u044b\u0439": 5, "\u0447\u0435\u0441\u0442\u043d\u044b\u043c": 6, "\u0447\u0438\u0441\u043b\u043e": 3, "\u0447\u0442\u043e": 3, "\u0448\u0430\u0440\u043f\u0430": 6, "\u0448\u043e\u0440\u0442": 6, "\u0448\u043e\u0440\u0442\u043b\u0438\u0441\u0442": 6, "\u0448\u0442": 3, "\u044d\u043a\u0441\u043f\u043e\u043d\u0435\u043d\u0446\u0438\u0430\u043b\u044c\u043d\u0430\u044f": 3, "\u044d\u043c\u0438\u0442\u0435\u043d\u0442": 3, "\u044d\u043c\u0438\u0442\u0435\u043d\u0442\u043e\u0432": [3, 6], "\u044d\u0442\u0430\u043f\u043e\u0432": 6, "\u044d\u0442\u0430\u043f\u044b": 6, "\u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e\u0439": 6, "\u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438": 6, "\u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u0443\u044e": 6, "\u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u044b\u0445": 6, "\u044f\u043d\u0432\u0430\u0440\u044f": 3}, "titles": ["bRECs documentation", "kursach", "pys package", "pys.data_collection package", "pys.data_collection.news_processor package", "pys.improved_pipeline package", "pys.porfolio_optimization package", "pys.utils package"], "titleterms": {"backtest": 6, "bonds_kbd_pipelin": 3, "bonds_kbd_strategi": 3, "bonds_pars": 3, "bonds_processor": 3, "brec": 0, "content": [0, 2, 3, 4, 5, 6, 7], "data_collect": [3, 4], "data_integr": 3, "document": 0, "event_detector": 4, "executor": 6, "fundamental_data": 3, "grid_search": 5, "honest_backtest": 5, "improved_pipelin": 5, "indic": 0, "kbd": 3, "kbd_analyz": 3, "keyword": 4, "kursach": 1, "logger": 7, "market_cap": 3, "market_data": 3, "modul": [2, 3, 4, 5, 6, 7], "monkey_patch": 7, "news_feature_extractor": 4, "news_integr": 4, "news_pipelin": 3, "news_preprocessor": 4, "news_processor": 4, "news_visu": 4, "packag": [2, 3, 4, 5, 6, 7], "paramet": [5, 6], "path_help": 7, "porfolio_optim": 6, "portfolio_optim": 6, "private_info": 3, "py": [2, 3, 4, 5, 6, 7], "return": [5, 6], "run_with_config": 7, "sentiment_analysi": 4, "short_selling_support": 5, "signal_gener": 6, "submodul": [3, 4, 5, 6, 7], "subpackag": [2, 3], "tabl": 0, "tech_analysi": 3, "technical_ind": 3, "util": 7}})