import logging
import json
import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (CallbackContext, CommandHandler, CallbackQueryHandler,
                          ConversationHandler, MessageHandler, Filters)

from db import crud, get_db_session
from ..states import (START_ROUTES, RISK_ASSESSMENT, PORTFOLIO_VIEW, SETTINGS_MAIN,
                      CONTACT_ADMIN, DEACTIVATE_CONFIRM)

from ..utils.keyboard_utils import get_main_keyboard
from . import profile, portfolio, settings


logger = logging.getLogger(__name__)

# –ó–∞–≥—Ä—É–∑–∫–∞ ID –∞–¥–º–∏–Ω–æ–≤
try:
    ADMIN_IDS = json.loads(os.getenv('TELEGRAM_ADMIN_IDS', '[]'))
    if not isinstance(ADMIN_IDS, list): ADMIN_IDS = []
except Exception:
    ADMIN_IDS = []

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ---
def start(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start."""
    user_tg = update.effective_user
    logger.info(f"User {user_tg.id} started bot.")

    with get_db_session() as db:
        db_user = crud.get_user_by_telegram_id(db, user_tg.id)

        if not db_user:
            # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            logger.info(f"Creating new user for telegram_id {user_tg.id}")
            try:
                db_user = crud.create_user(
                    db,
                    telegram_id=user_tg.id,
                    username=user_tg.username,
                    first_name=user_tg.first_name,
                    last_name=user_tg.last_name
                )
                update.message.reply_text(
                    f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user_tg.first_name}! üëã\n\n"
                    "–Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å.\n"
                    "–î–ª—è –Ω–∞—á–∞–ª–∞, –¥–∞–≤–∞–π—Ç–µ –æ–ø—Ä–µ–¥–µ–ª–∏–º –≤–∞—à –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å."
                )
                # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—é —Ä–∏—Å–∫-–ø—Ä–æ—Ñ–∏–ª—è (–∏–∑ profile.py)
                return profile.start_risk_assessment(update, context)
            except Exception as e:
                logger.exception(f"Error creating user {user_tg.id}: {e}")
                update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ /start –µ—â–µ —Ä–∞–∑.")
                return ConversationHandler.END

        elif not db_user.risk_profile:
             # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å, –Ω–æ –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–µ—Ä–≤–∞–ª —Ä–∞–Ω—å—à–µ)
             logger.info(f"User {user_tg.id} exists but has no profile. Starting assessment.")
             update.message.reply_text(
                 f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {user_tg.first_name}! –ü–æ—Ö–æ–∂–µ, –≤—ã –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–∏—Å–∫-–ø—Ä–æ—Ñ–∏–ª—è. –î–∞–≤–∞–π—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏–º."
             )
             return profile.start_risk_assessment(update, context)

        elif not db_user.is_active:
             # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –∏ –≤–µ—Ä–Ω—É–ª—Å—è
             logger.info(f"Re-activating user {user_tg.id}")
             crud.update_user_active_status(db, user_tg.id, True)
             update.message.reply_text(
                 f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {user_tg.first_name}! –í–∞—à –∞–∫–∫–∞—É–Ω—Ç —Å–Ω–æ–≤–∞ –∞–∫—Ç–∏–≤–µ–Ω.",
                 reply_markup=get_main_keyboard()
             )
             return START_ROUTES

        else:
            # –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∞–∫—Ç–∏–≤–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            logger.info(f"Existing user {user_tg.id} returned.")
            update.message.reply_text(
                f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {user_tg.first_name}! üëã",
                reply_markup=get_main_keyboard()
            )
            return START_ROUTES

def main_menu_handler(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
    query = update.callback_query
    query.answer()
    data = query.data

    if data == 'main_portfolio':
        return portfolio.show_portfolio(update, context) # –ü–µ—Ä–µ—Ö–æ–¥ –≤ PORTFOLIO_VIEW
    elif data == 'main_settings':
        return settings.show_settings(update, context) # –ü–µ—Ä–µ—Ö–æ–¥ –≤ SETTINGS_MAIN
    elif data == 'main_help':
        query.edit_message_text(get_help_text(), parse_mode='Markdown')
        query.edit_message_reply_markup(reply_markup=get_main_keyboard())
        return START_ROUTES
    else:
         logger.warning(f"Unknown main menu callback data: {data}")
         query.edit_message_text("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.", reply_markup=get_main_keyboard())
         return START_ROUTES

def back_to_main_menu(update: Update, context: CallbackContext):
     """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–∑ –¥—Ä—É–≥–∏—Ö —Ä–∞–∑–¥–µ–ª–æ–≤."""
     query = update.callback_query
     query.answer()
     query.edit_message_text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=get_main_keyboard())
     return START_ROUTES

def get_help_text():
     """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç —Å–ø—Ä–∞–≤–∫–∏."""
     return (
         "üìö *–°–ø—Ä–∞–≤–∫–∞*\n\n"
         "‚Ä¢ *–ú–æ–π –ø–æ—Ä—Ç—Ñ–µ–ª—å* - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â–∏–π —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–π —Å–æ—Å—Ç–∞–≤ –ø–æ—Ä—Ç—Ñ–µ–ª—è.\n"
         "‚Ä¢ *–ù–∞—Å—Ç—Ä–æ–π–∫–∏* - –∏–∑–º–µ–Ω–∏—Ç—å —Ä–∏—Å–∫-–ø—Ä–æ—Ñ–∏–ª—å –∏–ª–∏ –¥—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.\n"
         "‚Ä¢ `/start` - –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.\n"
         "‚Ä¢ `/help` - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É.\n"
         "‚Ä¢ `/cancel` - –æ—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ–ø—Ä–æ—Å).\n"
         "‚Ä¢ `/contact` - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.\n\n"
         "–ë–æ—Ç –±—É–¥–µ—Ç –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ (—Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é) –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞—Ç—å –≤–∞—à –ø–æ—Ä—Ç—Ñ–µ–ª—å –∏ –ø—Ä–∏—Å—ã–ª–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, –µ—Å–ª–∏ –ø–æ—Ç—Ä–µ–±—É—é—Ç—Å—è –∏–∑–º–µ–Ω–µ–Ω–∏—è."
     )

def help_command(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help."""
    update.message.reply_text(get_help_text(), parse_mode='Markdown', reply_markup=get_main_keyboard())
    return START_ROUTES

def contact_command(update: Update, context: CallbackContext):
     """–ù–∞—á–∏–Ω–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω—É."""
     update.message.reply_text(
         "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –û–Ω–æ –±—É–¥–µ—Ç –ø–µ—Ä–µ—Å–ª–∞–Ω–æ –µ–º—É."
         "–î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ /cancel."
     )
     return CONTACT_ADMIN

def forward_to_admin(update: Update, context: CallbackContext):
     """–ü–µ—Ä–µ—Å—ã–ª–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–¥–º–∏–Ω—É."""
     user = update.effective_user
     message_text = update.message.text
     logger.info(f"User {user.id} sending message to admin.")

     if not ADMIN_IDS:
          update.message.reply_text("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Å–≤—è–∑—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —Å–µ–π—á–∞—Å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.")
          return ConversationHandler.END

     forward_message = (
         f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n"
         f"ID: {user.id}\n"
         f"–ò–º—è: {user.full_name}\n"
         f"Username: @{user.username or '–Ω–µ—Ç'}\n\n"
         f"–°–æ–æ–±—â–µ–Ω–∏–µ:\n---\n{message_text}\n---"
     )

     sent_count = 0
     for admin_id in ADMIN_IDS:
          try:
               context.bot.send_message(chat_id=admin_id, text=forward_message)
               sent_count += 1
          except Exception as e:
               logger.error(f"Failed to forward message to admin {admin_id}: {e}")

     if sent_count > 0:
          update.message.reply_text("–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É!")
     else:
          update.message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

     update.message.reply_text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=get_main_keyboard())
     return START_ROUTES

def request_deactivate_confirm(update: Update, context: CallbackContext):
     """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏."""
     query = update.callback_query
     query.answer()
     keyboard = [
          [InlineKeyboardButton("üî¥ –î–∞, –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å", callback_data='confirm_deactivate_yes')],
          [InlineKeyboardButton("üü¢ –ù–µ—Ç, –æ—Å—Ç–∞–≤–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–º", callback_data='main_settings')]
     ]
     query.edit_message_text(
          "‚ö†Ô∏è *–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç?*\n\n"
          "–í—ã –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Ä—Ç—Ñ–µ–ª—è.\n"
          "–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã, –∏ –≤—ã —Å–º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è, —Å–Ω–æ–≤–∞ –Ω–∞–∂–∞–≤ /start.",
          reply_markup=InlineKeyboardMarkup(keyboard),
          parse_mode='Markdown'
     )
     return DEACTIVATE_CONFIRM

def deactivate_user(update: Update, context: CallbackContext):
     """–î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
     query = update.callback_query
     query.answer()
     user_tg = update.effective_user
     logger.info(f"Deactivating user {user_tg.id}")

     with get_db_session() as db:
          try:
               crud.update_user_active_status(db, user_tg.id, False)
               query.edit_message_text(
                    "–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω. –í—ã –±–æ–ª—å—à–µ –Ω–µ –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.\n"
                    "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ /start."
               )
               return ConversationHandler.END
          except Exception as e:
               logger.exception(f"Error deactivating user {user_tg.id}: {e}")
               query.edit_message_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
               query.edit_message_reply_markup(reply_markup=settings.get_settings_keyboard())
               return SETTINGS_MAIN

def cancel(update: Update, context: CallbackContext):
    """–û—Ç–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ –¥–∏–∞–ª–æ–≥–∞ –∏ –≤–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    user = update.effective_user
    logger.info(f"User {user.id} canceled operation.")
    update.message.reply_text(
        '–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.', reply_markup=get_main_keyboard()
    )
    return START_ROUTES

def error_handler(update: object, context: CallbackContext) -> None:
    """–õ–æ–≥–∏—Ä—É–µ—Ç –æ—à–∏–±–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é."""
    logger.error(f"Exception while handling an update: {context.error}", exc_info=context.error)

    if isinstance(update, Update) and update.effective_chat:
         try:
              context.bot.send_message(
                  chat_id=update.effective_chat.id,
                  text="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π."
              )
         except Exception as e:
              logger.error(f"Exception while sending error message to user: {e}")


def get_start_routes_handlers():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è START_ROUTES."""
    return [
        CallbackQueryHandler(main_menu_handler, pattern='^main_'),
        CallbackQueryHandler(back_to_main_menu, pattern='^back_to_main$'),
    ]

def get_contact_admin_handlers():
     """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è CONTACT_ADMIN."""
     return [MessageHandler(Filters.text & ~Filters.command, forward_to_admin)]

def get_deactivate_confirm_handlers():
     """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è DEACTIVATE_CONFIRM."""
     return [
          CallbackQueryHandler(deactivate_user, pattern='^confirm_deactivate_yes$'),
          CallbackQueryHandler(settings.show_settings, pattern='^main_settings$')
     ]
